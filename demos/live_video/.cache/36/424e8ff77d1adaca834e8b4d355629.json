{"id":"node_modules/@tensorflow-models/pose-detection/shared/filters/keypoints_smoothing.ts","dependencies":[{"name":"C:\\xampp\\htdocs\\pose-detection\\demos\\live_video\\package.json","includedInParent":true,"mtime":1636721533250},{"name":"C:\\xampp\\htdocs\\pose-detection\\demos\\live_video\\.babelrc","includedInParent":true,"mtime":1634828519177},{"name":"../calculators/get_object_scale","loc":{"line":19,"column":33},"parent":"C:\\xampp\\htdocs\\pose-detection\\demos\\live_video\\node_modules\\@tensorflow-models\\pose-detection\\shared\\filters\\keypoints_smoothing.ts","resolved":"C:\\xampp\\htdocs\\pose-detection\\demos\\live_video\\node_modules\\@tensorflow-models\\pose-detection\\shared\\calculators\\get_object_scale.ts"},{"name":"../calculators/keypoints_to_normalized_keypoints","loc":{"line":20,"column":50},"parent":"C:\\xampp\\htdocs\\pose-detection\\demos\\live_video\\node_modules\\@tensorflow-models\\pose-detection\\shared\\filters\\keypoints_smoothing.ts","resolved":"C:\\xampp\\htdocs\\pose-detection\\demos\\live_video\\node_modules\\@tensorflow-models\\pose-detection\\shared\\calculators\\keypoints_to_normalized_keypoints.ts"},{"name":"../calculators/normalized_keypoints_to_keypoints","loc":{"line":21,"column":50},"parent":"C:\\xampp\\htdocs\\pose-detection\\demos\\live_video\\node_modules\\@tensorflow-models\\pose-detection\\shared\\filters\\keypoints_smoothing.ts","resolved":"C:\\xampp\\htdocs\\pose-detection\\demos\\live_video\\node_modules\\@tensorflow-models\\pose-detection\\shared\\calculators\\normalized_keypoints_to_keypoints.ts"},{"name":"./keypoints_one_euro_filter","loc":{"line":22,"column":42},"parent":"C:\\xampp\\htdocs\\pose-detection\\demos\\live_video\\node_modules\\@tensorflow-models\\pose-detection\\shared\\filters\\keypoints_smoothing.ts","resolved":"C:\\xampp\\htdocs\\pose-detection\\demos\\live_video\\node_modules\\@tensorflow-models\\pose-detection\\shared\\filters\\keypoints_one_euro_filter.ts"},{"name":"./keypoints_velocity_filter","loc":{"line":23,"column":42},"parent":"C:\\xampp\\htdocs\\pose-detection\\demos\\live_video\\node_modules\\@tensorflow-models\\pose-detection\\shared\\filters\\keypoints_smoothing.ts","resolved":"C:\\xampp\\htdocs\\pose-detection\\demos\\live_video\\node_modules\\@tensorflow-models\\pose-detection\\shared\\filters\\keypoints_velocity_filter.ts"}],"generated":{"js":"\"use strict\";\r\n/**\r\n * @license\r\n * Copyright 2021 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * https://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\r\nexports.__esModule = true;\r\nvar get_object_scale_1 = require(\"../calculators/get_object_scale\");\r\nvar keypoints_to_normalized_keypoints_1 = require(\"../calculators/keypoints_to_normalized_keypoints\");\r\nvar normalized_keypoints_to_keypoints_1 = require(\"../calculators/normalized_keypoints_to_keypoints\");\r\nvar keypoints_one_euro_filter_1 = require(\"./keypoints_one_euro_filter\");\r\nvar keypoints_velocity_filter_1 = require(\"./keypoints_velocity_filter\");\r\n/**\r\n * A Calculator to smooth keypoints over time.\r\n */\r\nvar KeypointsSmoothingFilter = /** @class */ (function () {\r\n    function KeypointsSmoothingFilter(config) {\r\n        if (config.velocityFilter != null) {\r\n            this.keypointsFilter = new keypoints_velocity_filter_1.KeypointsVelocityFilter(config.velocityFilter);\r\n        }\r\n        else if (config.oneEuroFilter != null) {\r\n            this.keypointsFilter = new keypoints_one_euro_filter_1.KeypointsOneEuroFilter(config.oneEuroFilter);\r\n        }\r\n        else {\r\n            throw new Error('Either configure velocityFilter or oneEuroFilter, but got ' +\r\n                (config + \".\"));\r\n        }\r\n    }\r\n    /**\r\n     * Apply one of the stateful `KeypointsFilter` to keypoints.\r\n     *\r\n     * Currently supports `OneEuroFilter` and `VelocityFilter`.\r\n     * @param keypoints A list of 2D or 3D keypoints, can be normalized or\r\n     *     non-normalized.\r\n     * @param timestamp The timestamp of the video frame.\r\n     * @param imageSize Optional. The imageSize is useful when keypoints are\r\n     *     normalized.\r\n     * @param normalized Optional. Whether the keypoints are normalized. Default\r\n     *     to false.\r\n     * @param objectScaleROI Optional. The auxiliary ROI to calculate object\r\n     *     scale. If not set, objectScale defaults to 1.\r\n     */\r\n    KeypointsSmoothingFilter.prototype.apply = function (keypoints, timestamp, imageSize, normalized, objectScaleROI) {\r\n        if (normalized === void 0) { normalized = false; }\r\n        if (keypoints == null) {\r\n            this.keypointsFilter.reset();\r\n            return null;\r\n        }\r\n        var objectScale = objectScaleROI != null ? get_object_scale_1.getObjectScale(objectScaleROI, imageSize) : 1;\r\n        var scaledKeypoints = normalized ?\r\n            normalized_keypoints_to_keypoints_1.normalizedKeypointsToKeypoints(keypoints, imageSize) :\r\n            keypoints;\r\n        var scaledKeypointsFiltered = this.keypointsFilter.apply(scaledKeypoints, timestamp, objectScale);\r\n        return normalized ?\r\n            keypoints_to_normalized_keypoints_1.keypointsToNormalizedKeypoints(scaledKeypointsFiltered, imageSize) :\r\n            scaledKeypointsFiltered;\r\n    };\r\n    return KeypointsSmoothingFilter;\r\n}());\r\nexports.KeypointsSmoothingFilter = KeypointsSmoothingFilter;\r\n"},"sourceMaps":{"js":{"version":3,"file":"keypoints_smoothing.js","sourceRoot":"","sources":["node_modules/@tensorflow-models/pose-detection/shared/filters/keypoints_smoothing.ts"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;;GAeG;;AAEH,oEAA+D;AAI/D,sGAAgG;AAChG,sGAAgG;AAEhG,yEAAmE;AACnE,yEAAoE;AAEpE;;GAEG;AACH;IAGE,kCAAY,MAAgC;QAC1C,IAAI,MAAM,CAAC,cAAc,IAAI,IAAI,EAAE;YACjC,IAAI,CAAC,eAAe,GAAG,IAAI,mDAAuB,CAAC,MAAM,CAAC,cAAc,CAAC,CAAC;SAC3E;aAAM,IAAI,MAAM,CAAC,aAAa,IAAI,IAAI,EAAE;YACvC,IAAI,CAAC,eAAe,GAAG,IAAI,kDAAsB,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC;SACzE;aAAM;YACL,MAAM,IAAI,KAAK,CACX,4DAA4D;iBACzD,MAAM,MAAG,CAAA,CAAC,CAAC;SACnB;IACH,CAAC;IAED;;;;;;;;;;;;;OAaG;IACH,wCAAK,GAAL,UACI,SAAqB,EAAE,SAAiB,EAAE,SAAqB,EAC/D,UAAkB,EAAE,cAAqB;QAAzC,2BAAA,EAAA,kBAAkB;QACpB,IAAI,SAAS,IAAI,IAAI,EAAE;YACrB,IAAI,CAAC,eAAe,CAAC,KAAK,EAAE,CAAC;YAC7B,OAAO,IAAI,CAAC;SACb;QAED,IAAM,WAAW,GACb,cAAc,IAAI,IAAI,CAAC,CAAC,CAAC,iCAAc,CAAC,cAAc,EAAE,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAE3E,IAAM,eAAe,GAAG,UAAU,CAAC,CAAC;YAChC,kEAA8B,CAAC,SAAS,EAAE,SAAS,CAAC,CAAC,CAAC;YACtD,SAAS,CAAC;QACd,IAAM,uBAAuB,GACzB,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,eAAe,EAAE,SAAS,EAAE,WAAW,CAAC,CAAC;QAExE,OAAO,UAAU,CAAC,CAAC;YACf,kEAA8B,CAAC,uBAAuB,EAAE,SAAS,CAAC,CAAC,CAAC;YACpE,uBAAuB,CAAC;IAC9B,CAAC;IACH,+BAAC;AAAD,CAAC,AAlDD,IAkDC;AAlDY,4DAAwB","sourcesContent":["/**\r\n * @license\r\n * Copyright 2021 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * https://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\r\n\r\nimport {getObjectScale} from '../calculators/get_object_scale';\r\nimport {ImageSize, Keypoint, KeypointsFilter} from '../calculators/interfaces/common_interfaces';\r\nimport {KeypointsSmoothingConfig} from '../calculators/interfaces/config_interfaces';\r\nimport {Rect} from '../calculators/interfaces/shape_interfaces';\r\nimport {keypointsToNormalizedKeypoints} from '../calculators/keypoints_to_normalized_keypoints';\r\nimport {normalizedKeypointsToKeypoints} from '../calculators/normalized_keypoints_to_keypoints';\r\n\r\nimport {KeypointsOneEuroFilter} from './keypoints_one_euro_filter';\r\nimport {KeypointsVelocityFilter} from './keypoints_velocity_filter';\r\n\r\n/**\r\n * A Calculator to smooth keypoints over time.\r\n */\r\nexport class KeypointsSmoothingFilter {\r\n  private readonly keypointsFilter: KeypointsFilter;\r\n\r\n  constructor(config: KeypointsSmoothingConfig) {\r\n    if (config.velocityFilter != null) {\r\n      this.keypointsFilter = new KeypointsVelocityFilter(config.velocityFilter);\r\n    } else if (config.oneEuroFilter != null) {\r\n      this.keypointsFilter = new KeypointsOneEuroFilter(config.oneEuroFilter);\r\n    } else {\r\n      throw new Error(\r\n          'Either configure velocityFilter or oneEuroFilter, but got ' +\r\n          `${config}.`);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Apply one of the stateful `KeypointsFilter` to keypoints.\r\n   *\r\n   * Currently supports `OneEuroFilter` and `VelocityFilter`.\r\n   * @param keypoints A list of 2D or 3D keypoints, can be normalized or\r\n   *     non-normalized.\r\n   * @param timestamp The timestamp of the video frame.\r\n   * @param imageSize Optional. The imageSize is useful when keypoints are\r\n   *     normalized.\r\n   * @param normalized Optional. Whether the keypoints are normalized. Default\r\n   *     to false.\r\n   * @param objectScaleROI Optional. The auxiliary ROI to calculate object\r\n   *     scale. If not set, objectScale defaults to 1.\r\n   */\r\n  apply(\r\n      keypoints: Keypoint[], timestamp: number, imageSize?: ImageSize,\r\n      normalized = false, objectScaleROI?: Rect): Keypoint[] {\r\n    if (keypoints == null) {\r\n      this.keypointsFilter.reset();\r\n      return null;\r\n    }\r\n\r\n    const objectScale =\r\n        objectScaleROI != null ? getObjectScale(objectScaleROI, imageSize) : 1;\r\n\r\n    const scaledKeypoints = normalized ?\r\n        normalizedKeypointsToKeypoints(keypoints, imageSize) :\r\n        keypoints;\r\n    const scaledKeypointsFiltered =\r\n        this.keypointsFilter.apply(scaledKeypoints, timestamp, objectScale);\r\n\r\n    return normalized ?\r\n        keypointsToNormalizedKeypoints(scaledKeypointsFiltered, imageSize) :\r\n        scaledKeypointsFiltered;\r\n  }\r\n}\r\n"]}},"error":null,"hash":"b74729d2244c65a1d7bc8d5735c9b836","cacheData":{"env":{}}}