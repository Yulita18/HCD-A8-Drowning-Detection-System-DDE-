{"id":"node_modules/scatter-gl/dist/util.js","dependencies":[{"name":"C:\\xampp\\htdocs\\pose-detection\\demos\\live_video\\package.json","includedInParent":true,"mtime":1636721533250},{"name":"C:\\xampp\\htdocs\\pose-detection\\demos\\live_video\\.babelrc","includedInParent":true,"mtime":1634828519177},{"name":"C:\\xampp\\htdocs\\pose-detection\\demos\\live_video\\node_modules\\scatter-gl\\package.json","includedInParent":true,"mtime":1634828546977},{"name":"three","loc":{"line":3,"column":20},"parent":"C:\\xampp\\htdocs\\pose-detection\\demos\\live_video\\node_modules\\scatter-gl\\dist\\util.js","resolved":"C:\\xampp\\htdocs\\pose-detection\\demos\\live_video\\node_modules\\three\\build\\three.module.js"}],"generated":{"js":"\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar THREE = require(\"three\");\r\nfunction vector3DToScreenCoords(cam, w, h, v) {\r\n    var dpr = window.devicePixelRatio;\r\n    var pv = new THREE.Vector3().copy(v).project(cam);\r\n    var coords = [\r\n        ((pv.x + 1) / 2) * w * dpr,\r\n        -(((pv.y - 1) / 2) * h) * dpr,\r\n    ];\r\n    return coords;\r\n}\r\nexports.vector3DToScreenCoords = vector3DToScreenCoords;\r\nfunction vector3FromPackedArray(a, pointIndex) {\r\n    var offset = pointIndex * 3;\r\n    return new THREE.Vector3(a[offset], a[offset + 1], a[offset + 2]);\r\n}\r\nexports.vector3FromPackedArray = vector3FromPackedArray;\r\nfunction getNearFarPoints(worldSpacePoints, cameraPos, cameraTarget) {\r\n    var shortestDist = Infinity;\r\n    var furthestDist = 0;\r\n    var camToTarget = new THREE.Vector3().copy(cameraTarget).sub(cameraPos);\r\n    var camPlaneNormal = new THREE.Vector3().copy(camToTarget).normalize();\r\n    var n = worldSpacePoints.length / 3;\r\n    var src = 0;\r\n    var p = new THREE.Vector3();\r\n    var camToPoint = new THREE.Vector3();\r\n    for (var i = 0; i < n; i++) {\r\n        p.x = worldSpacePoints[src];\r\n        p.y = worldSpacePoints[src + 1];\r\n        p.z = worldSpacePoints[src + 2];\r\n        src += 3;\r\n        camToPoint.copy(p).sub(cameraPos);\r\n        var dist = camPlaneNormal.dot(camToPoint);\r\n        if (dist < 0) {\r\n            continue;\r\n        }\r\n        furthestDist = dist > furthestDist ? dist : furthestDist;\r\n        shortestDist = dist < shortestDist ? dist : shortestDist;\r\n    }\r\n    return [shortestDist, furthestDist];\r\n}\r\nexports.getNearFarPoints = getNearFarPoints;\r\nfunction prepareTexture(texture, needsUpdate) {\r\n    if (needsUpdate === void 0) { needsUpdate = true; }\r\n    texture.needsUpdate = needsUpdate;\r\n    texture.minFilter = THREE.LinearFilter;\r\n    texture.generateMipmaps = false;\r\n    texture.flipY = false;\r\n    return texture;\r\n}\r\nfunction createTextureFromCanvas(image) {\r\n    var texture = new THREE.Texture(image);\r\n    return prepareTexture(texture);\r\n}\r\nexports.createTextureFromCanvas = createTextureFromCanvas;\r\nfunction createTextureFromImage(image, onImageLoad) {\r\n    var texture = new THREE.Texture(image);\r\n    image.onload = function () {\r\n        texture.needsUpdate = true;\r\n        onImageLoad();\r\n    };\r\n    return prepareTexture(texture, false);\r\n}\r\nexports.createTextureFromImage = createTextureFromImage;\r\nfunction hasWebGLSupport() {\r\n    try {\r\n        var c = document.createElement('canvas');\r\n        var gl = c.getContext('webgl') || c.getContext('experimental-webgl');\r\n        return gl != null;\r\n    }\r\n    catch (e) {\r\n        return false;\r\n    }\r\n}\r\nexports.hasWebGLSupport = hasWebGLSupport;\r\nfunction extent(data) {\r\n    var minimum = Infinity;\r\n    var maximum = -Infinity;\r\n    for (var i = 0; i < data.length; i++) {\r\n        var item = data[i];\r\n        if (item < minimum)\r\n            minimum = item;\r\n        if (item > maximum)\r\n            maximum = item;\r\n    }\r\n    return [minimum, maximum];\r\n}\r\nexports.extent = extent;\r\nfunction scaleLinear(value, domain, range) {\r\n    var domainDifference = domain[1] - domain[0];\r\n    var rangeDifference = range[1] - range[0];\r\n    var percentDomain = (value - domain[0]) / domainDifference;\r\n    return percentDomain * rangeDifference + range[0];\r\n}\r\nexports.scaleLinear = scaleLinear;\r\nfunction scaleExponential(value, domain, range) {\r\n    var domainDifference = Math.pow(domain[1], Math.E) - Math.pow(domain[0], Math.E);\r\n    var rangeDifference = range[1] - range[0];\r\n    var percentDomain = (Math.pow(value, Math.E) - domain[0]) / domainDifference;\r\n    return percentDomain * rangeDifference + range[0];\r\n}\r\nexports.scaleExponential = scaleExponential;\r\nfunction packRgbIntoUint8Array(rgbArray, labelIndex, r, g, b) {\r\n    rgbArray[labelIndex * 3] = r;\r\n    rgbArray[labelIndex * 3 + 1] = g;\r\n    rgbArray[labelIndex * 3 + 2] = b;\r\n}\r\nexports.packRgbIntoUint8Array = packRgbIntoUint8Array;\r\nfunction styleRgbFromHexColor(hex) {\r\n    var c = new THREE.Color(hex);\r\n    return [(c.r * 255) | 0, (c.g * 255) | 0, (c.b * 255) | 0];\r\n}\r\nexports.styleRgbFromHexColor = styleRgbFromHexColor;\r\nvar toPercent = function (percent) { return 100 * percent + \"%\"; };\r\nfunction getDefaultPointInPolylineColor(index, totalPoints, startHue, endHue, saturation, lightness) {\r\n    var hue = startHue + ((endHue - startHue) * index) / totalPoints;\r\n    var hsl = \"hsl(\" + hue + \", \" + toPercent(saturation) + \", \" + toPercent(lightness) + \")\";\r\n    return new THREE.Color(hsl);\r\n}\r\nexports.getDefaultPointInPolylineColor = getDefaultPointInPolylineColor;\r\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/scatter-gl/dist/util.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/scatter-gl/dist/util.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/scatter-gl/dist/util.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/scatter-gl/dist/util.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/scatter-gl/dist/util.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/scatter-gl/dist/util.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/scatter-gl/dist/util.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/scatter-gl/dist/util.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/scatter-gl/dist/util.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/scatter-gl/dist/util.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/scatter-gl/dist/util.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/scatter-gl/dist/util.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/scatter-gl/dist/util.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/scatter-gl/dist/util.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/scatter-gl/dist/util.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/scatter-gl/dist/util.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/scatter-gl/dist/util.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/scatter-gl/dist/util.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/scatter-gl/dist/util.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/scatter-gl/dist/util.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/scatter-gl/dist/util.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/scatter-gl/dist/util.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/scatter-gl/dist/util.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/scatter-gl/dist/util.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/scatter-gl/dist/util.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/scatter-gl/dist/util.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/scatter-gl/dist/util.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/scatter-gl/dist/util.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/scatter-gl/dist/util.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/scatter-gl/dist/util.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/scatter-gl/dist/util.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/scatter-gl/dist/util.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/scatter-gl/dist/util.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/scatter-gl/dist/util.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/scatter-gl/dist/util.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/scatter-gl/dist/util.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/scatter-gl/dist/util.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/scatter-gl/dist/util.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/scatter-gl/dist/util.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/scatter-gl/dist/util.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/scatter-gl/dist/util.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/scatter-gl/dist/util.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/scatter-gl/dist/util.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/scatter-gl/dist/util.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/scatter-gl/dist/util.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/scatter-gl/dist/util.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/scatter-gl/dist/util.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/scatter-gl/dist/util.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/scatter-gl/dist/util.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/scatter-gl/dist/util.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/scatter-gl/dist/util.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/scatter-gl/dist/util.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/scatter-gl/dist/util.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/scatter-gl/dist/util.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/scatter-gl/dist/util.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/scatter-gl/dist/util.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/scatter-gl/dist/util.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/scatter-gl/dist/util.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/scatter-gl/dist/util.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/scatter-gl/dist/util.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/scatter-gl/dist/util.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/scatter-gl/dist/util.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/scatter-gl/dist/util.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/scatter-gl/dist/util.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/scatter-gl/dist/util.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/scatter-gl/dist/util.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/scatter-gl/dist/util.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/scatter-gl/dist/util.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/scatter-gl/dist/util.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/scatter-gl/dist/util.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/scatter-gl/dist/util.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/scatter-gl/dist/util.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/scatter-gl/dist/util.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/scatter-gl/dist/util.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/scatter-gl/dist/util.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/scatter-gl/dist/util.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/scatter-gl/dist/util.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/scatter-gl/dist/util.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/scatter-gl/dist/util.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/scatter-gl/dist/util.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/scatter-gl/dist/util.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/scatter-gl/dist/util.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/scatter-gl/dist/util.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/scatter-gl/dist/util.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/scatter-gl/dist/util.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/scatter-gl/dist/util.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/scatter-gl/dist/util.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/scatter-gl/dist/util.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/scatter-gl/dist/util.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/scatter-gl/dist/util.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/scatter-gl/dist/util.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/scatter-gl/dist/util.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/scatter-gl/dist/util.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/scatter-gl/dist/util.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/scatter-gl/dist/util.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/scatter-gl/dist/util.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/scatter-gl/dist/util.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/scatter-gl/dist/util.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/scatter-gl/dist/util.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/scatter-gl/dist/util.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/scatter-gl/dist/util.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/scatter-gl/dist/util.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/scatter-gl/dist/util.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/scatter-gl/dist/util.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/scatter-gl/dist/util.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/scatter-gl/dist/util.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/scatter-gl/dist/util.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/scatter-gl/dist/util.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/scatter-gl/dist/util.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/scatter-gl/dist/util.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/scatter-gl/dist/util.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/scatter-gl/dist/util.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/scatter-gl/dist/util.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/scatter-gl/dist/util.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/scatter-gl/dist/util.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/scatter-gl/dist/util.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/scatter-gl/dist/util.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/scatter-gl/dist/util.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/scatter-gl/dist/util.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/scatter-gl/dist/util.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/scatter-gl/dist/util.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/scatter-gl/dist/util.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}}],"sources":{"node_modules/scatter-gl/dist/util.js":"\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar THREE = require(\"three\");\r\nfunction vector3DToScreenCoords(cam, w, h, v) {\r\n    var dpr = window.devicePixelRatio;\r\n    var pv = new THREE.Vector3().copy(v).project(cam);\r\n    var coords = [\r\n        ((pv.x + 1) / 2) * w * dpr,\r\n        -(((pv.y - 1) / 2) * h) * dpr,\r\n    ];\r\n    return coords;\r\n}\r\nexports.vector3DToScreenCoords = vector3DToScreenCoords;\r\nfunction vector3FromPackedArray(a, pointIndex) {\r\n    var offset = pointIndex * 3;\r\n    return new THREE.Vector3(a[offset], a[offset + 1], a[offset + 2]);\r\n}\r\nexports.vector3FromPackedArray = vector3FromPackedArray;\r\nfunction getNearFarPoints(worldSpacePoints, cameraPos, cameraTarget) {\r\n    var shortestDist = Infinity;\r\n    var furthestDist = 0;\r\n    var camToTarget = new THREE.Vector3().copy(cameraTarget).sub(cameraPos);\r\n    var camPlaneNormal = new THREE.Vector3().copy(camToTarget).normalize();\r\n    var n = worldSpacePoints.length / 3;\r\n    var src = 0;\r\n    var p = new THREE.Vector3();\r\n    var camToPoint = new THREE.Vector3();\r\n    for (var i = 0; i < n; i++) {\r\n        p.x = worldSpacePoints[src];\r\n        p.y = worldSpacePoints[src + 1];\r\n        p.z = worldSpacePoints[src + 2];\r\n        src += 3;\r\n        camToPoint.copy(p).sub(cameraPos);\r\n        var dist = camPlaneNormal.dot(camToPoint);\r\n        if (dist < 0) {\r\n            continue;\r\n        }\r\n        furthestDist = dist > furthestDist ? dist : furthestDist;\r\n        shortestDist = dist < shortestDist ? dist : shortestDist;\r\n    }\r\n    return [shortestDist, furthestDist];\r\n}\r\nexports.getNearFarPoints = getNearFarPoints;\r\nfunction prepareTexture(texture, needsUpdate) {\r\n    if (needsUpdate === void 0) { needsUpdate = true; }\r\n    texture.needsUpdate = needsUpdate;\r\n    texture.minFilter = THREE.LinearFilter;\r\n    texture.generateMipmaps = false;\r\n    texture.flipY = false;\r\n    return texture;\r\n}\r\nfunction createTextureFromCanvas(image) {\r\n    var texture = new THREE.Texture(image);\r\n    return prepareTexture(texture);\r\n}\r\nexports.createTextureFromCanvas = createTextureFromCanvas;\r\nfunction createTextureFromImage(image, onImageLoad) {\r\n    var texture = new THREE.Texture(image);\r\n    image.onload = function () {\r\n        texture.needsUpdate = true;\r\n        onImageLoad();\r\n    };\r\n    return prepareTexture(texture, false);\r\n}\r\nexports.createTextureFromImage = createTextureFromImage;\r\nfunction hasWebGLSupport() {\r\n    try {\r\n        var c = document.createElement('canvas');\r\n        var gl = c.getContext('webgl') || c.getContext('experimental-webgl');\r\n        return gl != null;\r\n    }\r\n    catch (e) {\r\n        return false;\r\n    }\r\n}\r\nexports.hasWebGLSupport = hasWebGLSupport;\r\nfunction extent(data) {\r\n    var minimum = Infinity;\r\n    var maximum = -Infinity;\r\n    for (var i = 0; i < data.length; i++) {\r\n        var item = data[i];\r\n        if (item < minimum)\r\n            minimum = item;\r\n        if (item > maximum)\r\n            maximum = item;\r\n    }\r\n    return [minimum, maximum];\r\n}\r\nexports.extent = extent;\r\nfunction scaleLinear(value, domain, range) {\r\n    var domainDifference = domain[1] - domain[0];\r\n    var rangeDifference = range[1] - range[0];\r\n    var percentDomain = (value - domain[0]) / domainDifference;\r\n    return percentDomain * rangeDifference + range[0];\r\n}\r\nexports.scaleLinear = scaleLinear;\r\nfunction scaleExponential(value, domain, range) {\r\n    var domainDifference = Math.pow(domain[1], Math.E) - Math.pow(domain[0], Math.E);\r\n    var rangeDifference = range[1] - range[0];\r\n    var percentDomain = (Math.pow(value, Math.E) - domain[0]) / domainDifference;\r\n    return percentDomain * rangeDifference + range[0];\r\n}\r\nexports.scaleExponential = scaleExponential;\r\nfunction packRgbIntoUint8Array(rgbArray, labelIndex, r, g, b) {\r\n    rgbArray[labelIndex * 3] = r;\r\n    rgbArray[labelIndex * 3 + 1] = g;\r\n    rgbArray[labelIndex * 3 + 2] = b;\r\n}\r\nexports.packRgbIntoUint8Array = packRgbIntoUint8Array;\r\nfunction styleRgbFromHexColor(hex) {\r\n    var c = new THREE.Color(hex);\r\n    return [(c.r * 255) | 0, (c.g * 255) | 0, (c.b * 255) | 0];\r\n}\r\nexports.styleRgbFromHexColor = styleRgbFromHexColor;\r\nvar toPercent = function (percent) { return 100 * percent + \"%\"; };\r\nfunction getDefaultPointInPolylineColor(index, totalPoints, startHue, endHue, saturation, lightness) {\r\n    var hue = startHue + ((endHue - startHue) * index) / totalPoints;\r\n    var hsl = \"hsl(\" + hue + \", \" + toPercent(saturation) + \", \" + toPercent(lightness) + \")\";\r\n    return new THREE.Color(hsl);\r\n}\r\nexports.getDefaultPointInPolylineColor = getDefaultPointInPolylineColor;\r\n"},"lineCount":122}},"error":null,"hash":"34c4889ce68f90a4b1e38497a4cea6f0","cacheData":{"env":{}}}