{"id":"node_modules/@tensorflow-models/pose-detection/shared/calculators/landmarks_to_detection.ts","dependencies":[{"name":"C:\\xampp\\htdocs\\pose-detection\\demos\\live_video\\package.json","includedInParent":true,"mtime":1634830278911},{"name":"C:\\xampp\\htdocs\\pose-detection\\demos\\live_video\\.babelrc","includedInParent":true,"mtime":1634828519177}],"generated":{"js":"\"use strict\";\r\n/**\r\n * @license\r\n * Copyright 2021 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * https://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\r\nexports.__esModule = true;\r\n/**\r\n * Converts normalized Landmark to `Detection`. A relative bounding box will\r\n * be created containing all landmarks exactly.\r\n * @param landmarks List of normalized landmarks.\r\n *\r\n * @returns A `Detection`.\r\n */\r\n// ref:\r\n// https://github.com/google/mediapipe/blob/master/mediapipe/calculators/util/landmarks_to_detection_calculator.cc\r\nfunction landmarksToDetection(landmarks) {\r\n    var detection = { locationData: { relativeKeypoints: [] } };\r\n    var xMin = Number.MAX_SAFE_INTEGER;\r\n    var xMax = Number.MIN_SAFE_INTEGER;\r\n    var yMin = Number.MAX_SAFE_INTEGER;\r\n    var yMax = Number.MIN_SAFE_INTEGER;\r\n    for (var i = 0; i < landmarks.length; ++i) {\r\n        var landmark = landmarks[i];\r\n        xMin = Math.min(xMin, landmark.x);\r\n        xMax = Math.max(xMax, landmark.x);\r\n        yMin = Math.min(yMin, landmark.y);\r\n        yMax = Math.max(yMax, landmark.y);\r\n        detection.locationData.relativeKeypoints.push({ x: landmark.x, y: landmark.y });\r\n    }\r\n    detection.locationData.relativeBoundingBox =\r\n        { xMin: xMin, yMin: yMin, xMax: xMax, yMax: yMax, width: (xMax - xMin), height: (yMax - yMin) };\r\n    return detection;\r\n}\r\nexports.landmarksToDetection = landmarksToDetection;\r\n"},"sourceMaps":{"js":{"version":3,"file":"landmarks_to_detection.js","sourceRoot":"","sources":["node_modules/@tensorflow-models/pose-detection/shared/calculators/landmarks_to_detection.ts"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;;GAeG;;AAKH;;;;;;GAMG;AACH,OAAO;AACP,kHAAkH;AAClH,SAAgB,oBAAoB,CAAC,SAAqB;IACxD,IAAM,SAAS,GACC,EAAC,YAAY,EAAE,EAAC,iBAAiB,EAAE,EAAgB,EAAC,EAAC,CAAC;IAEtE,IAAI,IAAI,GAAG,MAAM,CAAC,gBAAgB,CAAC;IACnC,IAAI,IAAI,GAAG,MAAM,CAAC,gBAAgB,CAAC;IACnC,IAAI,IAAI,GAAG,MAAM,CAAC,gBAAgB,CAAC;IACnC,IAAI,IAAI,GAAG,MAAM,CAAC,gBAAgB,CAAC;IAEnC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE;QACzC,IAAM,QAAQ,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC;QAC9B,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC,CAAC,CAAC;QAClC,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC,CAAC,CAAC;QAClC,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC,CAAC,CAAC;QAClC,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC,CAAC,CAAC;QAElC,SAAS,CAAC,YAAY,CAAC,iBAAiB,CAAC,IAAI,CACzC,EAAC,CAAC,EAAE,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,QAAQ,CAAC,CAAC,EAAa,CAAC,CAAC;KACjD;IAED,SAAS,CAAC,YAAY,CAAC,mBAAmB;QACtC,EAAC,IAAI,MAAA,EAAE,IAAI,MAAA,EAAE,IAAI,MAAA,EAAE,IAAI,MAAA,EAAE,KAAK,EAAE,CAAC,IAAI,GAAG,IAAI,CAAC,EAAE,MAAM,EAAE,CAAC,IAAI,GAAG,IAAI,CAAC,EAAC,CAAC;IAE1E,OAAO,SAAS,CAAC;AACnB,CAAC;AAxBD,oDAwBC","sourcesContent":["/**\r\n * @license\r\n * Copyright 2021 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * https://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\r\n\r\nimport {Keypoint} from './interfaces/common_interfaces';\r\nimport {Detection} from './interfaces/shape_interfaces';\r\n\r\n/**\r\n * Converts normalized Landmark to `Detection`. A relative bounding box will\r\n * be created containing all landmarks exactly.\r\n * @param landmarks List of normalized landmarks.\r\n *\r\n * @returns A `Detection`.\r\n */\r\n// ref:\r\n// https://github.com/google/mediapipe/blob/master/mediapipe/calculators/util/landmarks_to_detection_calculator.cc\r\nexport function landmarksToDetection(landmarks: Keypoint[]): Detection {\r\n  const detection:\r\n      Detection = {locationData: {relativeKeypoints: [] as Keypoint[]}};\r\n\r\n  let xMin = Number.MAX_SAFE_INTEGER;\r\n  let xMax = Number.MIN_SAFE_INTEGER;\r\n  let yMin = Number.MAX_SAFE_INTEGER;\r\n  let yMax = Number.MIN_SAFE_INTEGER;\r\n\r\n  for (let i = 0; i < landmarks.length; ++i) {\r\n    const landmark = landmarks[i];\r\n    xMin = Math.min(xMin, landmark.x);\r\n    xMax = Math.max(xMax, landmark.x);\r\n    yMin = Math.min(yMin, landmark.y);\r\n    yMax = Math.max(yMax, landmark.y);\r\n\r\n    detection.locationData.relativeKeypoints.push(\r\n        {x: landmark.x, y: landmark.y} as Keypoint);\r\n  }\r\n\r\n  detection.locationData.relativeBoundingBox =\r\n      {xMin, yMin, xMax, yMax, width: (xMax - xMin), height: (yMax - yMin)};\r\n\r\n  return detection;\r\n}\r\n"]}},"error":null,"hash":"36c7799e9816defa697b672731b0020a","cacheData":{"env":{}}}