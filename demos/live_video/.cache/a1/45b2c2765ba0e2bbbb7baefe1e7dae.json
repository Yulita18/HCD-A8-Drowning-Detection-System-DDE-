{"id":"node_modules/@tensorflow-models/pose-detection/calculators/tracker_utils.js","dependencies":[{"name":"C:\\xampp\\htdocs\\pose-detection\\demos\\live_video\\node_modules\\@tensorflow-models\\pose-detection\\calculators\\tracker_utils.js.map","includedInParent":true,"mtime":1636860944671},{"name":"C:\\xampp\\htdocs\\pose-detection\\src\\calculators\\tracker_utils.ts","includedInParent":true,"mtime":1636643616579},{"name":"C:\\xampp\\htdocs\\pose-detection\\demos\\live_video\\package.json","includedInParent":true,"mtime":1637425559411},{"name":"C:\\xampp\\htdocs\\pose-detection\\demos\\live_video\\.babelrc","includedInParent":true,"mtime":1634828519177}],"generated":{"js":"\"use strict\";\r\n/**\r\n * @license\r\n * Copyright 2021 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * https://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nfunction validateTrackerConfig(config) {\r\n    if (config.maxTracks < 1) {\r\n        throw new Error(\"Must specify 'maxTracks' to be at least 1, but \" +\r\n            (\"encountered \" + config.maxTracks));\r\n    }\r\n    if (config.maxAge <= 0) {\r\n        throw new Error(\"Must specify 'maxAge' to be positive, but \" +\r\n            (\"encountered \" + config.maxAge));\r\n    }\r\n    if (config.keypointTrackerParams !== undefined) {\r\n        if (config.keypointTrackerParams.keypointConfidenceThreshold < 0 ||\r\n            config.keypointTrackerParams.keypointConfidenceThreshold > 1) {\r\n            throw new Error(\"Must specify 'keypointConfidenceThreshold' to be in the range \" +\r\n                \"[0, 1], but encountered \" +\r\n                (\"\" + config.keypointTrackerParams.keypointConfidenceThreshold));\r\n        }\r\n        if (config.keypointTrackerParams.minNumberOfKeypoints < 1) {\r\n            throw new Error(\"Must specify 'minNumberOfKeypoints' to be at least 1, but \" +\r\n                (\"encountered \" + config.keypointTrackerParams.minNumberOfKeypoints));\r\n        }\r\n        for (var _i = 0, _a = config.keypointTrackerParams.keypointFalloff; _i < _a.length; _i++) {\r\n            var falloff = _a[_i];\r\n            if (falloff <= 0.0) {\r\n                throw new Error(\"Must specify each keypoint falloff parameterto be positive \" +\r\n                    (\"but encountered \" + falloff));\r\n            }\r\n        }\r\n    }\r\n}\r\nexports.validateTrackerConfig = validateTrackerConfig;\r\n"},"sourceMaps":{"js":{"version":3,"file":"tracker_utils.js","sourceRoot":"","sources":["../../../../../../src/calculators/tracker_utils.ts"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;;GAeG;;AAIH,SAAgB,qBAAqB,CAAC,MAAqB;IACzD,IAAI,MAAM,CAAC,SAAS,GAAG,CAAC,EAAE;QACxB,MAAM,IAAI,KAAK,CACb,iDAAiD;aACjD,iBAAe,MAAM,CAAC,SAAW,CAAA,CAAC,CAAC;KACtC;IACD,IAAI,MAAM,CAAC,MAAM,IAAI,CAAC,EAAE;QACtB,MAAM,IAAI,KAAK,CACb,4CAA4C;aAC5C,iBAAe,MAAM,CAAC,MAAQ,CAAA,CAAC,CAAC;KACnC;IAED,IAAI,MAAM,CAAC,qBAAqB,KAAK,SAAS,EAAE;QAC9C,IAAI,MAAM,CAAC,qBAAqB,CAAC,2BAA2B,GAAG,CAAC;YAC5D,MAAM,CAAC,qBAAqB,CAAC,2BAA2B,GAAG,CAAC,EAAE;YAChE,MAAM,IAAI,KAAK,CACb,gEAAgE;gBAChE,0BAA0B;iBAC1B,KAAG,MAAM,CAAC,qBAAqB,CAAC,2BAA6B,CAAA,CAAC,CAAC;SAClE;QACD,IAAI,MAAM,CAAC,qBAAqB,CAAC,oBAAoB,GAAG,CAAC,EAAE;YACzD,MAAM,IAAI,KAAK,CACb,4DAA4D;iBAC5D,iBAAe,MAAM,CAAC,qBAAqB,CAAC,oBAAsB,CAAA,CAAC,CAAC;SACvE;QACD,KAAsB,UAA4C,EAA5C,KAAA,MAAM,CAAC,qBAAqB,CAAC,eAAe,EAA5C,cAA4C,EAA5C,IAA4C,EAAE;YAA/D,IAAM,OAAO,SAAA;YAChB,IAAI,OAAO,IAAI,GAAG,EAAE;gBAClB,MAAM,IAAI,KAAK,CACb,6DAA6D;qBAC7D,qBAAmB,OAAS,CAAA,CAAC,CAAC;aACjC;SACF;KACF;AACH,CAAC;AAjCD,sDAiCC","sourcesContent":["/**\r\n * @license\r\n * Copyright 2021 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * https://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\r\n\r\nimport {TrackerConfig} from './interfaces/config_interfaces';\r\n\r\nexport function validateTrackerConfig(config: TrackerConfig): void {\r\n  if (config.maxTracks < 1) {\r\n    throw new Error(\r\n      `Must specify 'maxTracks' to be at least 1, but ` +\r\n      `encountered ${config.maxTracks}`);\r\n  }\r\n  if (config.maxAge <= 0) {\r\n    throw new Error(\r\n      `Must specify 'maxAge' to be positive, but ` +\r\n      `encountered ${config.maxAge}`);\r\n  }\r\n\r\n  if (config.keypointTrackerParams !== undefined) {\r\n    if (config.keypointTrackerParams.keypointConfidenceThreshold < 0 ||\r\n        config.keypointTrackerParams.keypointConfidenceThreshold > 1) {\r\n      throw new Error(\r\n        `Must specify 'keypointConfidenceThreshold' to be in the range ` +\r\n        `[0, 1], but encountered ` +\r\n        `${config.keypointTrackerParams.keypointConfidenceThreshold}`);\r\n    }\r\n    if (config.keypointTrackerParams.minNumberOfKeypoints < 1) {\r\n      throw new Error(\r\n        `Must specify 'minNumberOfKeypoints' to be at least 1, but ` +\r\n        `encountered ${config.keypointTrackerParams.minNumberOfKeypoints}`);\r\n    }\r\n    for (const falloff of config.keypointTrackerParams.keypointFalloff) {\r\n      if (falloff <= 0.0) {\r\n        throw new Error(\r\n          `Must specify each keypoint falloff parameterto be positive ` +\r\n          `but encountered ${falloff}`);\r\n      }\r\n    }\r\n  }\r\n} "]}},"error":null,"hash":"6e1af6e6dfedbec135a2dfb091042890","cacheData":{"env":{}}}