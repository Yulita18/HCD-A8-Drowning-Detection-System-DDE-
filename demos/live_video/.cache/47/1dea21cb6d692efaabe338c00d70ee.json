{"id":"node_modules/@tensorflow-models/pose-detection/blazepose_tfjs/detector.js","dependencies":[{"name":"C:\\xampp\\htdocs\\pose-detection\\demos\\live_video\\node_modules\\@tensorflow-models\\pose-detection\\blazepose_tfjs\\detector.js.map","includedInParent":true,"mtime":1634828521840},{"name":"C:\\xampp\\htdocs\\pose-detection\\demos\\live_video\\package.json","includedInParent":true,"mtime":1634830278911},{"name":"C:\\xampp\\htdocs\\pose-detection\\demos\\live_video\\.babelrc","includedInParent":true,"mtime":1634828519177},{"name":"@tensorflow/tfjs-converter","loc":{"line":54,"column":21},"parent":"C:\\xampp\\htdocs\\pose-detection\\demos\\live_video\\node_modules\\@tensorflow-models\\pose-detection\\blazepose_tfjs\\detector.js","resolved":"C:\\xampp\\htdocs\\pose-detection\\demos\\live_video\\node_modules\\@tensorflow\\tfjs-converter\\dist\\index.js"},{"name":"@tensorflow/tfjs-core","loc":{"line":55,"column":17},"parent":"C:\\xampp\\htdocs\\pose-detection\\demos\\live_video\\node_modules\\@tensorflow-models\\pose-detection\\blazepose_tfjs\\detector.js","resolved":"C:\\xampp\\htdocs\\pose-detection\\demos\\live_video\\node_modules\\@tensorflow\\tfjs-core\\dist\\index.js"},{"name":"../constants","loc":{"line":56,"column":26},"parent":"C:\\xampp\\htdocs\\pose-detection\\demos\\live_video\\node_modules\\@tensorflow-models\\pose-detection\\blazepose_tfjs\\detector.js","resolved":"C:\\xampp\\htdocs\\pose-detection\\demos\\live_video\\node_modules\\@tensorflow-models\\pose-detection\\constants.js"},{"name":"../shared/calculators/calculate_alignment_points_rects","loc":{"line":57,"column":49},"parent":"C:\\xampp\\htdocs\\pose-detection\\demos\\live_video\\node_modules\\@tensorflow-models\\pose-detection\\blazepose_tfjs\\detector.js","resolved":"C:\\xampp\\htdocs\\pose-detection\\demos\\live_video\\node_modules\\@tensorflow-models\\pose-detection\\shared\\calculators\\calculate_alignment_points_rects.ts"},{"name":"../shared/calculators/calculate_landmark_projection","loc":{"line":58,"column":46},"parent":"C:\\xampp\\htdocs\\pose-detection\\demos\\live_video\\node_modules\\@tensorflow-models\\pose-detection\\blazepose_tfjs\\detector.js","resolved":"C:\\xampp\\htdocs\\pose-detection\\demos\\live_video\\node_modules\\@tensorflow-models\\pose-detection\\shared\\calculators\\calculate_landmark_projection.ts"},{"name":"../shared/calculators/calculate_score_copy","loc":{"line":59,"column":37},"parent":"C:\\xampp\\htdocs\\pose-detection\\demos\\live_video\\node_modules\\@tensorflow-models\\pose-detection\\blazepose_tfjs\\detector.js","resolved":"C:\\xampp\\htdocs\\pose-detection\\demos\\live_video\\node_modules\\@tensorflow-models\\pose-detection\\shared\\calculators\\calculate_score_copy.ts"},{"name":"../shared/calculators/calculate_world_landmark_projection","loc":{"line":60,"column":52},"parent":"C:\\xampp\\htdocs\\pose-detection\\demos\\live_video\\node_modules\\@tensorflow-models\\pose-detection\\blazepose_tfjs\\detector.js","resolved":"C:\\xampp\\htdocs\\pose-detection\\demos\\live_video\\node_modules\\@tensorflow-models\\pose-detection\\shared\\calculators\\calculate_world_landmark_projection.ts"},{"name":"../shared/calculators/constants","loc":{"line":61,"column":26},"parent":"C:\\xampp\\htdocs\\pose-detection\\demos\\live_video\\node_modules\\@tensorflow-models\\pose-detection\\blazepose_tfjs\\detector.js","resolved":"C:\\xampp\\htdocs\\pose-detection\\demos\\live_video\\node_modules\\@tensorflow-models\\pose-detection\\shared\\calculators\\constants.ts"},{"name":"../shared/calculators/convert_image_to_tensor","loc":{"line":62,"column":40},"parent":"C:\\xampp\\htdocs\\pose-detection\\demos\\live_video\\node_modules\\@tensorflow-models\\pose-detection\\blazepose_tfjs\\detector.js","resolved":"C:\\xampp\\htdocs\\pose-detection\\demos\\live_video\\node_modules\\@tensorflow-models\\pose-detection\\shared\\calculators\\convert_image_to_tensor.ts"},{"name":"../shared/calculators/create_ssd_anchors","loc":{"line":63,"column":35},"parent":"C:\\xampp\\htdocs\\pose-detection\\demos\\live_video\\node_modules\\@tensorflow-models\\pose-detection\\blazepose_tfjs\\detector.js","resolved":"C:\\xampp\\htdocs\\pose-detection\\demos\\live_video\\node_modules\\@tensorflow-models\\pose-detection\\shared\\calculators\\create_ssd_anchors.ts"},{"name":"../shared/calculators/detector_inference","loc":{"line":64,"column":35},"parent":"C:\\xampp\\htdocs\\pose-detection\\demos\\live_video\\node_modules\\@tensorflow-models\\pose-detection\\blazepose_tfjs\\detector.js","resolved":"C:\\xampp\\htdocs\\pose-detection\\demos\\live_video\\node_modules\\@tensorflow-models\\pose-detection\\shared\\calculators\\detector_inference.ts"},{"name":"../shared/calculators/image_utils","loc":{"line":65,"column":28},"parent":"C:\\xampp\\htdocs\\pose-detection\\demos\\live_video\\node_modules\\@tensorflow-models\\pose-detection\\blazepose_tfjs\\detector.js","resolved":"C:\\xampp\\htdocs\\pose-detection\\demos\\live_video\\node_modules\\@tensorflow-models\\pose-detection\\shared\\calculators\\image_utils.ts"},{"name":"../shared/calculators/is_video","loc":{"line":66,"column":25},"parent":"C:\\xampp\\htdocs\\pose-detection\\demos\\live_video\\node_modules\\@tensorflow-models\\pose-detection\\blazepose_tfjs\\detector.js","resolved":"C:\\xampp\\htdocs\\pose-detection\\demos\\live_video\\node_modules\\@tensorflow-models\\pose-detection\\shared\\calculators\\is_video.ts"},{"name":"../shared/calculators/landmarks_to_detection","loc":{"line":67,"column":39},"parent":"C:\\xampp\\htdocs\\pose-detection\\demos\\live_video\\node_modules\\@tensorflow-models\\pose-detection\\blazepose_tfjs\\detector.js","resolved":"C:\\xampp\\htdocs\\pose-detection\\demos\\live_video\\node_modules\\@tensorflow-models\\pose-detection\\shared\\calculators\\landmarks_to_detection.ts"},{"name":"../shared/calculators/non_max_suppression","loc":{"line":68,"column":36},"parent":"C:\\xampp\\htdocs\\pose-detection\\demos\\live_video\\node_modules\\@tensorflow-models\\pose-detection\\blazepose_tfjs\\detector.js","resolved":"C:\\xampp\\htdocs\\pose-detection\\demos\\live_video\\node_modules\\@tensorflow-models\\pose-detection\\shared\\calculators\\non_max_suppression.ts"},{"name":"../shared/calculators/normalized_keypoints_to_keypoints","loc":{"line":69,"column":50},"parent":"C:\\xampp\\htdocs\\pose-detection\\demos\\live_video\\node_modules\\@tensorflow-models\\pose-detection\\blazepose_tfjs\\detector.js","resolved":"C:\\xampp\\htdocs\\pose-detection\\demos\\live_video\\node_modules\\@tensorflow-models\\pose-detection\\shared\\calculators\\normalized_keypoints_to_keypoints.ts"},{"name":"../shared/calculators/refine_landmarks_from_heatmap","loc":{"line":70,"column":46},"parent":"C:\\xampp\\htdocs\\pose-detection\\demos\\live_video\\node_modules\\@tensorflow-models\\pose-detection\\blazepose_tfjs\\detector.js","resolved":"C:\\xampp\\htdocs\\pose-detection\\demos\\live_video\\node_modules\\@tensorflow-models\\pose-detection\\shared\\calculators\\refine_landmarks_from_heatmap.ts"},{"name":"../shared/calculators/remove_detection_letterbox","loc":{"line":71,"column":43},"parent":"C:\\xampp\\htdocs\\pose-detection\\demos\\live_video\\node_modules\\@tensorflow-models\\pose-detection\\blazepose_tfjs\\detector.js","resolved":"C:\\xampp\\htdocs\\pose-detection\\demos\\live_video\\node_modules\\@tensorflow-models\\pose-detection\\shared\\calculators\\remove_detection_letterbox.ts"},{"name":"../shared/calculators/remove_landmark_letterbox","loc":{"line":72,"column":42},"parent":"C:\\xampp\\htdocs\\pose-detection\\demos\\live_video\\node_modules\\@tensorflow-models\\pose-detection\\blazepose_tfjs\\detector.js","resolved":"C:\\xampp\\htdocs\\pose-detection\\demos\\live_video\\node_modules\\@tensorflow-models\\pose-detection\\shared\\calculators\\remove_landmark_letterbox.ts"},{"name":"../shared/calculators/shift_image_value","loc":{"line":73,"column":34},"parent":"C:\\xampp\\htdocs\\pose-detection\\demos\\live_video\\node_modules\\@tensorflow-models\\pose-detection\\blazepose_tfjs\\detector.js","resolved":"C:\\xampp\\htdocs\\pose-detection\\demos\\live_video\\node_modules\\@tensorflow-models\\pose-detection\\shared\\calculators\\shift_image_value.ts"},{"name":"../shared/calculators/tensors_to_detections","loc":{"line":74,"column":38},"parent":"C:\\xampp\\htdocs\\pose-detection\\demos\\live_video\\node_modules\\@tensorflow-models\\pose-detection\\blazepose_tfjs\\detector.js","resolved":"C:\\xampp\\htdocs\\pose-detection\\demos\\live_video\\node_modules\\@tensorflow-models\\pose-detection\\shared\\calculators\\tensors_to_detections.ts"},{"name":"../shared/calculators/tensors_to_landmarks","loc":{"line":75,"column":37},"parent":"C:\\xampp\\htdocs\\pose-detection\\demos\\live_video\\node_modules\\@tensorflow-models\\pose-detection\\blazepose_tfjs\\detector.js","resolved":"C:\\xampp\\htdocs\\pose-detection\\demos\\live_video\\node_modules\\@tensorflow-models\\pose-detection\\shared\\calculators\\tensors_to_landmarks.ts"},{"name":"../shared/calculators/transform_rect","loc":{"line":76,"column":31},"parent":"C:\\xampp\\htdocs\\pose-detection\\demos\\live_video\\node_modules\\@tensorflow-models\\pose-detection\\blazepose_tfjs\\detector.js","resolved":"C:\\xampp\\htdocs\\pose-detection\\demos\\live_video\\node_modules\\@tensorflow-models\\pose-detection\\shared\\calculators\\transform_rect.ts"},{"name":"../shared/filters/keypoints_smoothing","loc":{"line":77,"column":36},"parent":"C:\\xampp\\htdocs\\pose-detection\\demos\\live_video\\node_modules\\@tensorflow-models\\pose-detection\\blazepose_tfjs\\detector.js","resolved":"C:\\xampp\\htdocs\\pose-detection\\demos\\live_video\\node_modules\\@tensorflow-models\\pose-detection\\shared\\filters\\keypoints_smoothing.ts"},{"name":"../shared/filters/visibility_smoothing","loc":{"line":78,"column":37},"parent":"C:\\xampp\\htdocs\\pose-detection\\demos\\live_video\\node_modules\\@tensorflow-models\\pose-detection\\blazepose_tfjs\\detector.js","resolved":"C:\\xampp\\htdocs\\pose-detection\\demos\\live_video\\node_modules\\@tensorflow-models\\pose-detection\\shared\\filters\\visibility_smoothing.ts"},{"name":"./constants","loc":{"line":79,"column":24},"parent":"C:\\xampp\\htdocs\\pose-detection\\demos\\live_video\\node_modules\\@tensorflow-models\\pose-detection\\blazepose_tfjs\\detector.js","resolved":"C:\\xampp\\htdocs\\pose-detection\\demos\\live_video\\node_modules\\@tensorflow-models\\pose-detection\\blazepose_tfjs\\constants.js"},{"name":"./detector_utils","loc":{"line":80,"column":31},"parent":"C:\\xampp\\htdocs\\pose-detection\\demos\\live_video\\node_modules\\@tensorflow-models\\pose-detection\\blazepose_tfjs\\detector.js","resolved":"C:\\xampp\\htdocs\\pose-detection\\demos\\live_video\\node_modules\\@tensorflow-models\\pose-detection\\blazepose_tfjs\\detector_utils.js"}],"generated":{"js":"\"use strict\";\r\n/**\r\n * @license\r\n * Copyright 2021 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * https://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __generator = (this && this.__generator) || function (thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar tfconv = require(\"@tensorflow/tfjs-converter\");\r\nvar tf = require(\"@tensorflow/tfjs-core\");\r\nvar constants_1 = require(\"../constants\");\r\nvar calculate_alignment_points_rects_1 = require(\"../shared/calculators/calculate_alignment_points_rects\");\r\nvar calculate_landmark_projection_1 = require(\"../shared/calculators/calculate_landmark_projection\");\r\nvar calculate_score_copy_1 = require(\"../shared/calculators/calculate_score_copy\");\r\nvar calculate_world_landmark_projection_1 = require(\"../shared/calculators/calculate_world_landmark_projection\");\r\nvar constants_2 = require(\"../shared/calculators/constants\");\r\nvar convert_image_to_tensor_1 = require(\"../shared/calculators/convert_image_to_tensor\");\r\nvar create_ssd_anchors_1 = require(\"../shared/calculators/create_ssd_anchors\");\r\nvar detector_inference_1 = require(\"../shared/calculators/detector_inference\");\r\nvar image_utils_1 = require(\"../shared/calculators/image_utils\");\r\nvar is_video_1 = require(\"../shared/calculators/is_video\");\r\nvar landmarks_to_detection_1 = require(\"../shared/calculators/landmarks_to_detection\");\r\nvar non_max_suppression_1 = require(\"../shared/calculators/non_max_suppression\");\r\nvar normalized_keypoints_to_keypoints_1 = require(\"../shared/calculators/normalized_keypoints_to_keypoints\");\r\nvar refine_landmarks_from_heatmap_1 = require(\"../shared/calculators/refine_landmarks_from_heatmap\");\r\nvar remove_detection_letterbox_1 = require(\"../shared/calculators/remove_detection_letterbox\");\r\nvar remove_landmark_letterbox_1 = require(\"../shared/calculators/remove_landmark_letterbox\");\r\nvar shift_image_value_1 = require(\"../shared/calculators/shift_image_value\");\r\nvar tensors_to_detections_1 = require(\"../shared/calculators/tensors_to_detections\");\r\nvar tensors_to_landmarks_1 = require(\"../shared/calculators/tensors_to_landmarks\");\r\nvar transform_rect_1 = require(\"../shared/calculators/transform_rect\");\r\nvar keypoints_smoothing_1 = require(\"../shared/filters/keypoints_smoothing\");\r\nvar visibility_smoothing_1 = require(\"../shared/filters/visibility_smoothing\");\r\nvar constants = require(\"./constants\");\r\nvar detector_utils_1 = require(\"./detector_utils\");\r\n/**\r\n * BlazePose detector class.\r\n */\r\nvar BlazePoseTfjsDetector = /** @class */ (function () {\r\n    function BlazePoseTfjsDetector(detectorModel, landmarkModel, enableSmoothing, modelType) {\r\n        this.detectorModel = detectorModel;\r\n        this.landmarkModel = landmarkModel;\r\n        this.enableSmoothing = enableSmoothing;\r\n        this.modelType = modelType;\r\n        // Store global states.\r\n        this.regionOfInterest = null;\r\n        this.anchors =\r\n            create_ssd_anchors_1.createSsdAnchors(constants.BLAZEPOSE_DETECTOR_ANCHOR_CONFIGURATION);\r\n        var anchorW = tf.tensor1d(this.anchors.map(function (a) { return a.width; }));\r\n        var anchorH = tf.tensor1d(this.anchors.map(function (a) { return a.height; }));\r\n        var anchorX = tf.tensor1d(this.anchors.map(function (a) { return a.xCenter; }));\r\n        var anchorY = tf.tensor1d(this.anchors.map(function (a) { return a.yCenter; }));\r\n        this.anchorTensor = { x: anchorX, y: anchorY, w: anchorW, h: anchorH };\r\n    }\r\n    /**\r\n     * Estimates poses for an image or video frame.\r\n     *\r\n     * It returns a single pose or multiple poses based on the maxPose parameter\r\n     * from the `config`.\r\n     *\r\n     * @param image\r\n     * ImageData|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement The input\r\n     * image to feed through the network.\r\n     *\r\n     * @param estimationConfig Optional. See `BlazePoseTfjsEstimationConfig`\r\n     *       documentation for detail.\r\n     *\r\n     * @param timestamp Optional. In milliseconds. This is useful when image is\r\n     *     a tensor, which doesn't have timestamp info. Or to override timestamp\r\n     *     in a video.\r\n     *\r\n     * @return An array of `Pose`s.\r\n     */\r\n    // TF.js implementation of the mediapipe pose detection pipeline.\r\n    // ref graph:\r\n    // https://github.com/google/mediapipe/blob/master/mediapipe/modules/pose_landmark/pose_landmark_cpu.pbtxt\r\n    BlazePoseTfjsDetector.prototype.estimatePoses = function (image, estimationConfig, timestamp) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var config, imageSize, image3d, poseRect, detections, firstDetection, poseLandmarks, actualLandmarks, auxiliaryLandmarks, poseScore, actualWorldLandmarks, _a, actualLandmarksFiltered, auxiliaryLandmarksFiltered, actualWorldLandmarksFiltered, poseRectFromLandmarks, keypoints, keypoints3D, pose;\r\n            return __generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0:\r\n                        config = detector_utils_1.validateEstimationConfig(estimationConfig);\r\n                        if (image == null) {\r\n                            this.reset();\r\n                            return [2 /*return*/, []];\r\n                        }\r\n                        this.maxPoses = config.maxPoses;\r\n                        // User provided timestamp will override video's timestamp.\r\n                        if (timestamp != null) {\r\n                            this.timestamp = timestamp * constants_2.MILLISECOND_TO_MICRO_SECONDS;\r\n                        }\r\n                        else {\r\n                            // For static images, timestamp should be null.\r\n                            this.timestamp =\r\n                                is_video_1.isVideo(image) ? image.currentTime * constants_2.SECOND_TO_MICRO_SECONDS : null;\r\n                        }\r\n                        imageSize = image_utils_1.getImageSize(image);\r\n                        image3d = tf.tidy(function () { return tf.cast(image_utils_1.toImageTensor(image), 'float32'); });\r\n                        poseRect = this.regionOfInterest;\r\n                        if (!(poseRect == null)) return [3 /*break*/, 2];\r\n                        return [4 /*yield*/, this.detectPose(image3d)];\r\n                    case 1:\r\n                        detections = _b.sent();\r\n                        if (detections.length === 0) {\r\n                            this.reset();\r\n                            image3d.dispose();\r\n                            return [2 /*return*/, []];\r\n                        }\r\n                        firstDetection = detections[0];\r\n                        // Calculates region of interest based on pose detection, so that can be\r\n                        // used to detect landmarks.\r\n                        poseRect = this.poseDetectionToRoi(firstDetection, imageSize);\r\n                        _b.label = 2;\r\n                    case 2: return [4 /*yield*/, this.poseLandmarksByRoi(poseRect, image3d)];\r\n                    case 3:\r\n                        poseLandmarks = _b.sent();\r\n                        image3d.dispose();\r\n                        if (poseLandmarks == null) {\r\n                            this.reset();\r\n                            return [2 /*return*/, []];\r\n                        }\r\n                        actualLandmarks = poseLandmarks.actualLandmarks, auxiliaryLandmarks = poseLandmarks.auxiliaryLandmarks, poseScore = poseLandmarks.poseScore, actualWorldLandmarks = poseLandmarks.actualWorldLandmarks;\r\n                        _a = this.poseLandmarkFiltering(actualLandmarks, auxiliaryLandmarks, actualWorldLandmarks, imageSize), actualLandmarksFiltered = _a.actualLandmarksFiltered, auxiliaryLandmarksFiltered = _a.auxiliaryLandmarksFiltered, actualWorldLandmarksFiltered = _a.actualWorldLandmarksFiltered;\r\n                        poseRectFromLandmarks = this.poseLandmarksToRoi(auxiliaryLandmarksFiltered, imageSize);\r\n                        // Cache roi for next image.\r\n                        this.regionOfInterest = poseRectFromLandmarks;\r\n                        keypoints = actualLandmarksFiltered != null ?\r\n                            normalized_keypoints_to_keypoints_1.normalizedKeypointsToKeypoints(actualLandmarksFiltered, imageSize) :\r\n                            null;\r\n                        // Add keypoint name.\r\n                        if (keypoints != null) {\r\n                            keypoints.forEach(function (keypoint, i) {\r\n                                keypoint.name = constants_1.BLAZEPOSE_KEYPOINTS[i];\r\n                            });\r\n                        }\r\n                        keypoints3D = actualWorldLandmarksFiltered;\r\n                        // Add keypoint name.\r\n                        if (keypoints3D != null) {\r\n                            keypoints3D.forEach(function (keypoint3D, i) {\r\n                                keypoint3D.name = constants_1.BLAZEPOSE_KEYPOINTS[i];\r\n                            });\r\n                        }\r\n                        pose = { score: poseScore, keypoints: keypoints, keypoints3D: keypoints3D };\r\n                        return [2 /*return*/, [pose]];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    BlazePoseTfjsDetector.prototype.dispose = function () {\r\n        this.detectorModel.dispose();\r\n        this.landmarkModel.dispose();\r\n        tf.dispose([\r\n            this.anchorTensor.x, this.anchorTensor.y, this.anchorTensor.w,\r\n            this.anchorTensor.h\r\n        ]);\r\n    };\r\n    BlazePoseTfjsDetector.prototype.reset = function () {\r\n        this.regionOfInterest = null;\r\n        this.visibilitySmoothingFilterActual = null;\r\n        this.visibilitySmoothingFilterAuxiliary = null;\r\n        this.landmarksSmoothingFilterActual = null;\r\n        this.landmarksSmoothingFilterAuxiliary = null;\r\n    };\r\n    // Detects poses.\r\n    // Subgraph: PoseDetectionCpu.\r\n    // ref:\r\n    // https://github.com/google/mediapipe/blob/master/mediapipe/modules/pose_detection/pose_detection_cpu.pbtxt\r\n    BlazePoseTfjsDetector.prototype.detectPose = function (image) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var _a, imageTensor, padding, imageValueShifted, _b, boxes, scores, detections, selectedDetections, newDetections;\r\n            return __generator(this, function (_c) {\r\n                switch (_c.label) {\r\n                    case 0:\r\n                        _a = convert_image_to_tensor_1.convertImageToTensor(image, constants.BLAZEPOSE_DETECTOR_IMAGE_TO_TENSOR_CONFIG), imageTensor = _a.imageTensor, padding = _a.padding;\r\n                        imageValueShifted = shift_image_value_1.shiftImageValue(imageTensor, [-1, 1]);\r\n                        _b = detector_inference_1.detectorInference(imageValueShifted, this.detectorModel), boxes = _b.boxes, scores = _b.scores;\r\n                        return [4 /*yield*/, tensors_to_detections_1.tensorsToDetections([scores, boxes], this.anchorTensor, constants.BLAZEPOSE_TENSORS_TO_DETECTION_CONFIGURATION)];\r\n                    case 1:\r\n                        detections = _c.sent();\r\n                        return [4 /*yield*/, non_max_suppression_1.nonMaxSuppression(detections, this.maxPoses, constants.BLAZEPOSE_DETECTOR_NON_MAX_SUPPRESSION_CONFIGURATION\r\n                                .minSuppressionThreshold, constants.BLAZEPOSE_DETECTOR_NON_MAX_SUPPRESSION_CONFIGURATION\r\n                                .minScoreThreshold)];\r\n                    case 2:\r\n                        selectedDetections = _c.sent();\r\n                        newDetections = remove_detection_letterbox_1.removeDetectionLetterbox(selectedDetections, padding);\r\n                        tf.dispose([imageTensor, imageValueShifted, scores, boxes]);\r\n                        return [2 /*return*/, newDetections];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    // Calculates region of interest from a detection.\r\n    // Subgraph: PoseDetectionToRoi.\r\n    // ref:\r\n    // https://github.com/google/mediapipe/blob/master/mediapipe/modules/pose_landmark/pose_detection_to_roi.pbtxt\r\n    // If detection is not null, imageSize should not be null either.\r\n    BlazePoseTfjsDetector.prototype.poseDetectionToRoi = function (detection, imageSize) {\r\n        var startKeypointIndex;\r\n        var endKeypointIndex;\r\n        // Converts pose detection into a rectangle based on center and scale\r\n        // alignment points.\r\n        startKeypointIndex = 0;\r\n        endKeypointIndex = 1;\r\n        // PoseDetectionToRoi: AlignmentPointsRectsCalculator.\r\n        var rawRoi = calculate_alignment_points_rects_1.calculateAlignmentPointsRects(detection, imageSize, {\r\n            rotationVectorEndKeypointIndex: endKeypointIndex,\r\n            rotationVectorStartKeypointIndex: startKeypointIndex,\r\n            rotationVectorTargetAngleDegree: 90\r\n        });\r\n        // Expands pose rect with marging used during training.\r\n        // PoseDetectionToRoi: RectTransformationCalculation.\r\n        var roi = transform_rect_1.transformNormalizedRect(rawRoi, imageSize, constants.BLAZEPOSE_DETECTOR_RECT_TRANSFORMATION_CONFIG);\r\n        return roi;\r\n    };\r\n    // Predict pose landmarks.\r\n    // subgraph: PoseLandmarksByRoiCpu\r\n    // ref:\r\n    // https://github.com/google/mediapipe/blob/master/mediapipe/modules/pose_landmark/pose_landmark_by_roi_cpu.pbtxt\r\n    // When poseRect is not null, image should not be null either.\r\n    BlazePoseTfjsDetector.prototype.poseLandmarksByRoi = function (poseRect, image) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var _a, imageTensor, padding, imageValueShifted, landmarkResult, landmarkTensor, poseFlagTensor, heatmapTensor, worldLandmarkTensor, poseScore, landmarks, refinedLandmarks, adjustedLandmarks, landmarksProjected, actualLandmarks, auxiliaryLandmarks, worldLandmarks, worldLandmarksWithVisibility, projectedWorldLandmarks, actualWorldLandmarks;\r\n            return __generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0:\r\n                        _a = convert_image_to_tensor_1.convertImageToTensor(image, constants.BLAZEPOSE_LANDMARK_IMAGE_TO_TENSOR_CONFIG, poseRect), imageTensor = _a.imageTensor, padding = _a.padding;\r\n                        imageValueShifted = shift_image_value_1.shiftImageValue(imageTensor, [0, 1]);\r\n                        if (this.modelType !== 'lite' && this.modelType !== 'full' &&\r\n                            this.modelType !== 'heavy') {\r\n                            throw new Error('Model type must be one of lite, full or heavy,' +\r\n                                (\"but got \" + this.modelType));\r\n                        }\r\n                        landmarkResult = this.landmarkModel.execute(imageValueShifted, [\r\n                            'ld_3d', 'output_poseflag', 'activation_heatmap', 'world_3d'\r\n                        ]);\r\n                        landmarkTensor = landmarkResult[0], poseFlagTensor = landmarkResult[1], heatmapTensor = landmarkResult[2], worldLandmarkTensor = landmarkResult[3];\r\n                        return [4 /*yield*/, poseFlagTensor.data()];\r\n                    case 1:\r\n                        poseScore = (_b.sent())[0];\r\n                        // Applies a threshold to the confidence score to determine whether a pose\r\n                        // is present.\r\n                        if (poseScore < constants.BLAZEPOSE_POSE_PRESENCE_SCORE) {\r\n                            tf.dispose(landmarkResult);\r\n                            tf.dispose([imageTensor, imageValueShifted]);\r\n                            return [2 /*return*/, null];\r\n                        }\r\n                        return [4 /*yield*/, tensors_to_landmarks_1.tensorsToLandmarks(landmarkTensor, constants.BLAZEPOSE_TENSORS_TO_LANDMARKS_CONFIG)];\r\n                    case 2:\r\n                        landmarks = _b.sent();\r\n                        return [4 /*yield*/, refine_landmarks_from_heatmap_1.refineLandmarksFromHeatmap(landmarks, heatmapTensor, constants.BLAZEPOSE_REFINE_LANDMARKS_FROM_HEATMAP_CONFIG)];\r\n                    case 3:\r\n                        refinedLandmarks = _b.sent();\r\n                        adjustedLandmarks = remove_landmark_letterbox_1.removeLandmarkLetterbox(refinedLandmarks, padding);\r\n                        landmarksProjected = calculate_landmark_projection_1.calculateLandmarkProjection(adjustedLandmarks, poseRect);\r\n                        actualLandmarks = landmarksProjected.slice(0, constants.BLAZEPOSE_NUM_KEYPOINTS);\r\n                        auxiliaryLandmarks = landmarksProjected.slice(constants.BLAZEPOSE_NUM_KEYPOINTS, constants.BLAZEPOSE_NUM_AUXILIARY_KEYPOINTS);\r\n                        return [4 /*yield*/, tensors_to_landmarks_1.tensorsToLandmarks(worldLandmarkTensor, constants.BLAZEPOSE_TENSORS_TO_WORLD_LANDMARKS_CONFIG)];\r\n                    case 4:\r\n                        worldLandmarks = _b.sent();\r\n                        worldLandmarksWithVisibility = calculate_score_copy_1.calculateScoreCopy(landmarks, worldLandmarks, true);\r\n                        projectedWorldLandmarks = calculate_world_landmark_projection_1.calculateWorldLandmarkProjection(worldLandmarksWithVisibility, poseRect);\r\n                        actualWorldLandmarks = projectedWorldLandmarks.slice(0, constants.BLAZEPOSE_NUM_KEYPOINTS);\r\n                        tf.dispose(landmarkResult);\r\n                        tf.dispose([imageTensor, imageValueShifted]);\r\n                        return [2 /*return*/, {\r\n                                actualLandmarks: actualLandmarks,\r\n                                auxiliaryLandmarks: auxiliaryLandmarks,\r\n                                poseScore: poseScore,\r\n                                actualWorldLandmarks: actualWorldLandmarks\r\n                            }];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    // Calculate region of interest (ROI) from landmarks.\r\n    // Subgraph: PoseLandmarksToRoiCpu\r\n    // ref:\r\n    // https://github.com/google/mediapipe/blob/master/mediapipe/modules/pose_landmark/pose_landmarks_to_roi.pbtxt\r\n    // When landmarks is not null, imageSize should not be null either.\r\n    BlazePoseTfjsDetector.prototype.poseLandmarksToRoi = function (landmarks, imageSize) {\r\n        // PoseLandmarksToRoi: LandmarksToDetectionCalculator.\r\n        var detection = landmarks_to_detection_1.landmarksToDetection(landmarks);\r\n        // Converts detection into a rectangle based on center and scale alignment\r\n        // points.\r\n        // PoseLandmarksToRoi: AlignmentPointsRectsCalculator.\r\n        var rawRoi = calculate_alignment_points_rects_1.calculateAlignmentPointsRects(detection, imageSize, {\r\n            rotationVectorStartKeypointIndex: 0,\r\n            rotationVectorEndKeypointIndex: 1,\r\n            rotationVectorTargetAngleDegree: 90\r\n        });\r\n        // Expands pose rect with marging used during training.\r\n        // PoseLandmarksToRoi: RectTransformationCalculator.\r\n        var roi = transform_rect_1.transformNormalizedRect(rawRoi, imageSize, constants.BLAZEPOSE_DETECTOR_RECT_TRANSFORMATION_CONFIG);\r\n        return roi;\r\n    };\r\n    // Filter landmarks temporally to reduce jitter.\r\n    // Subgraph: PoseLandmarkFiltering\r\n    // ref:\r\n    // https://github.com/google/mediapipe/blob/master/mediapipe/modules/pose_landmark/pose_landmark_filtering.pbtxt\r\n    BlazePoseTfjsDetector.prototype.poseLandmarkFiltering = function (actualLandmarks, auxiliaryLandmarks, actualWorldLandmarks, imageSize) {\r\n        var actualLandmarksFiltered;\r\n        var auxiliaryLandmarksFiltered;\r\n        var actualWorldLandmarksFiltered;\r\n        if (this.timestamp == null || !this.enableSmoothing) {\r\n            actualLandmarksFiltered = actualLandmarks;\r\n            auxiliaryLandmarksFiltered = auxiliaryLandmarks;\r\n            actualWorldLandmarksFiltered = actualWorldLandmarks;\r\n        }\r\n        else {\r\n            var auxDetection = landmarks_to_detection_1.landmarksToDetection(auxiliaryLandmarks);\r\n            var objectScaleROI = calculate_alignment_points_rects_1.calculateAlignmentPointsRects(auxDetection, imageSize, {\r\n                rotationVectorEndKeypointIndex: 0,\r\n                rotationVectorStartKeypointIndex: 1,\r\n                rotationVectorTargetAngleDegree: 90\r\n            });\r\n            // Smoothes pose landmark visibilities to reduce jitter.\r\n            if (this.visibilitySmoothingFilterActual == null) {\r\n                this.visibilitySmoothingFilterActual = new visibility_smoothing_1.LowPassVisibilityFilter(constants.BLAZEPOSE_VISIBILITY_SMOOTHING_CONFIG);\r\n            }\r\n            actualLandmarksFiltered =\r\n                this.visibilitySmoothingFilterActual.apply(actualLandmarks);\r\n            if (this.visibilitySmoothingFilterAuxiliary == null) {\r\n                this.visibilitySmoothingFilterAuxiliary = new visibility_smoothing_1.LowPassVisibilityFilter(constants.BLAZEPOSE_VISIBILITY_SMOOTHING_CONFIG);\r\n            }\r\n            auxiliaryLandmarksFiltered =\r\n                this.visibilitySmoothingFilterAuxiliary.apply(auxiliaryLandmarks);\r\n            actualWorldLandmarksFiltered =\r\n                this.visibilitySmoothingFilterActual.apply(actualWorldLandmarks);\r\n            // Smoothes pose landmark coordinates to reduce jitter.\r\n            if (this.landmarksSmoothingFilterActual == null) {\r\n                this.landmarksSmoothingFilterActual = new keypoints_smoothing_1.KeypointsSmoothingFilter(constants.BLAZEPOSE_LANDMARKS_SMOOTHING_CONFIG_ACTUAL);\r\n            }\r\n            actualLandmarksFiltered = this.landmarksSmoothingFilterActual.apply(actualLandmarksFiltered, this.timestamp, imageSize, true /* normalized */, objectScaleROI);\r\n            if (this.landmarksSmoothingFilterAuxiliary == null) {\r\n                this.landmarksSmoothingFilterAuxiliary = new keypoints_smoothing_1.KeypointsSmoothingFilter(constants.BLAZEPOSE_LANDMARKS_SMOOTHING_CONFIG_AUXILIARY);\r\n            }\r\n            auxiliaryLandmarksFiltered = this.landmarksSmoothingFilterAuxiliary.apply(auxiliaryLandmarksFiltered, this.timestamp, imageSize, true /* normalized */, objectScaleROI);\r\n            // Smoothes pose world landmark coordinates to reduce jitter.\r\n            if (this.worldLandmarksSmoothingFilterActual == null) {\r\n                this.worldLandmarksSmoothingFilterActual = new keypoints_smoothing_1.KeypointsSmoothingFilter(constants.BLAZEPOSE_WORLD_LANDMARKS_SMOOTHING_CONFIG_ACTUAL);\r\n            }\r\n            actualWorldLandmarksFiltered =\r\n                this.worldLandmarksSmoothingFilterActual.apply(actualWorldLandmarks, this.timestamp);\r\n        }\r\n        return {\r\n            actualLandmarksFiltered: actualLandmarksFiltered,\r\n            auxiliaryLandmarksFiltered: auxiliaryLandmarksFiltered,\r\n            actualWorldLandmarksFiltered: actualWorldLandmarksFiltered\r\n        };\r\n    };\r\n    return BlazePoseTfjsDetector;\r\n}());\r\n/**\r\n * Loads the BlazePose model.\r\n *\r\n * @param modelConfig ModelConfig object that contains parameters for\r\n * the BlazePose loading process. Please find more details of each parameters\r\n * in the documentation of the `BlazePoseTfjsModelConfig` interface.\r\n */\r\nfunction load(modelConfig) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var config, detectorFromTFHub, landmarkFromTFHub, _a, detectorModel, landmarkModel;\r\n        return __generator(this, function (_b) {\r\n            switch (_b.label) {\r\n                case 0:\r\n                    config = detector_utils_1.validateModelConfig(modelConfig);\r\n                    detectorFromTFHub = (config.detectorModelUrl.indexOf('https://tfhub.dev') > -1);\r\n                    landmarkFromTFHub = (config.landmarkModelUrl.indexOf('https://tfhub.dev') > -1);\r\n                    return [4 /*yield*/, Promise.all([\r\n                            tfconv.loadGraphModel(config.detectorModelUrl, { fromTFHub: detectorFromTFHub }),\r\n                            tfconv.loadGraphModel(config.landmarkModelUrl, { fromTFHub: landmarkFromTFHub })\r\n                        ])];\r\n                case 1:\r\n                    _a = _b.sent(), detectorModel = _a[0], landmarkModel = _a[1];\r\n                    return [2 /*return*/, new BlazePoseTfjsDetector(detectorModel, landmarkModel, config.enableSmoothing, config.modelType)];\r\n            }\r\n        });\r\n    });\r\n}\r\nexports.load = load;\r\n"},"sourceMaps":{"js":{"version":3,"file":"detector.js","sourceRoot":"","sources":["../../src/blazepose_tfjs/detector.ts"],"names":[],"mappings":"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","sourcesContent":[null]}},"error":null,"hash":"b6bd34a282cfbbe40bda561a4ae59da8","cacheData":{"env":{}}}