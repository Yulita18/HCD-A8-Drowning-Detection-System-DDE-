{"id":"pWiI","dependencies":[{"name":"C:\\xampp\\htdocs\\pose-detection\\demos\\live_video\\node_modules\\@tensorflow-models\\pose-detection\\types.js.map","includedInParent":true,"mtime":1636860388751},{"name":"C:\\xampp\\htdocs\\pose-detection\\src\\types.ts","includedInParent":true,"mtime":1636639142687},{"name":"C:\\xampp\\htdocs\\pose-detection\\demos\\live_video\\package.json","includedInParent":true,"mtime":1637408890499},{"name":"C:\\xampp\\htdocs\\pose-detection\\demos\\live_video\\.babelrc","includedInParent":true,"mtime":1634828519177},{"name":"./shared/calculators/interfaces/common_interfaces","loc":{"line":19,"column":34},"parent":"C:\\xampp\\htdocs\\pose-detection\\demos\\live_video\\node_modules\\@tensorflow-models\\pose-detection\\types.js","resolved":"C:\\xampp\\htdocs\\pose-detection\\demos\\live_video\\node_modules\\@tensorflow-models\\pose-detection\\shared\\calculators\\interfaces\\common_interfaces.ts"}],"generated":{"js":"\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:!0});var e,o=require(\"./shared/calculators/interfaces/common_interfaces\");exports.Keypoint=o.Keypoint,function(e){e.MoveNet=\"MoveNet\",e.BlazePose=\"BlazePose\",e.PoseNet=\"PoseNet\"}(e=exports.SupportedModels||(exports.SupportedModels={}));"},"sourceMaps":{"js":{"mappings":[{"source":"../../../../../src/types.ts","name":null,"original":{"line":17,"column":0},"generated":{"line":1,"column":68}},{"source":"../../../../../src/types.ts","name":null,"original":{"line":22,"column":12},"generated":{"line":1,"column":72}},{"source":"../../../../../src/types.ts","name":null,"original":{"line":17,"column":0},"generated":{"line":1,"column":74}},{"source":"../../../../../src/types.ts","name":null,"original":{"line":17,"column":0},"generated":{"line":1,"column":76}},{"source":"../../../../../src/types.ts","name":null,"original":{"line":17,"column":0},"generated":{"line":1,"column":84}},{"source":"../../../../../src/types.ts","name":null,"original":{"line":20,"column":8},"generated":{"line":1,"column":137}},{"source":"../../../../../src/types.ts","name":null,"original":{"line":20,"column":8},"generated":{"line":1,"column":145}},{"source":"../../../../../src/types.ts","name":null,"original":{"line":17,"column":23},"generated":{"line":1,"column":154}},{"source":"../../../../../src/types.ts","name":null,"original":{"line":17,"column":23},"generated":{"line":1,"column":156}},{"source":"../../../../../src/types.ts","name":null,"original":{"line":22,"column":0},"generated":{"line":1,"column":165}},{"source":"../../../../../src/types.ts","name":null,"original":{"line":22,"column":12},"generated":{"line":1,"column":174}},{"source":"../../../../../src/types.ts","name":null,"original":{"line":23,"column":2},"generated":{"line":1,"column":177}},{"source":"../../../../../src/types.ts","name":null,"original":{"line":23,"column":2},"generated":{"line":1,"column":179}},{"source":"../../../../../src/types.ts","name":null,"original":{"line":23,"column":2},"generated":{"line":1,"column":187}},{"source":"../../../../../src/types.ts","name":null,"original":{"line":24,"column":2},"generated":{"line":1,"column":197}},{"source":"../../../../../src/types.ts","name":null,"original":{"line":24,"column":2},"generated":{"line":1,"column":199}},{"source":"../../../../../src/types.ts","name":null,"original":{"line":24,"column":2},"generated":{"line":1,"column":209}},{"source":"../../../../../src/types.ts","name":null,"original":{"line":25,"column":2},"generated":{"line":1,"column":221}},{"source":"../../../../../src/types.ts","name":null,"original":{"line":25,"column":2},"generated":{"line":1,"column":223}},{"source":"../../../../../src/types.ts","name":null,"original":{"line":25,"column":2},"generated":{"line":1,"column":231}},{"source":"../../../../../src/types.ts","name":null,"original":{"line":22,"column":0},"generated":{"line":1,"column":241}},{"source":"../../../../../src/types.ts","name":null,"original":{"line":22,"column":12},"generated":{"line":1,"column":242}},{"source":"../../../../../src/types.ts","name":null,"original":{"line":22,"column":12},"generated":{"line":1,"column":244}},{"source":"../../../../../src/types.ts","name":null,"original":{"line":22,"column":12},"generated":{"line":1,"column":252}},{"source":"../../../../../src/types.ts","name":null,"original":{"line":22,"column":12},"generated":{"line":1,"column":270}},{"source":"../../../../../src/types.ts","name":null,"original":{"line":22,"column":12},"generated":{"line":1,"column":278}},{"source":"../../../../../src/types.ts","name":null,"original":{"line":22,"column":27},"generated":{"line":1,"column":294}}],"sources":{"../../../../../src/types.ts":"/**\r\n * @license\r\n * Copyright 2021 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * https://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\r\nimport {DetectorInput, Keypoint} from '../src/shared/calculators/interfaces/common_interfaces';\r\nimport { BoundingBox } from '../src/shared/calculators/interfaces/shape_interfaces';\r\n\r\nexport {Keypoint};\r\n\r\nexport enum SupportedModels {\r\n  MoveNet = 'MoveNet',\r\n  BlazePose = 'BlazePose',\r\n  PoseNet = 'PoseNet'\r\n}\r\n\r\nexport type QuantBytes = 1|2|4;\r\n\r\n/**\r\n * Common config to create the pose detector.\r\n */\r\nexport interface ModelConfig {}\r\n\r\n/**\r\n * Common config for the `estimatePoses` method.\r\n *\r\n * `maxPoses`: Optional. Max number poses to detect. Default to 1, which means\r\n * single pose detection. Single pose detection runs more efficiently, while\r\n * multi-pose (maxPoses > 1) detection is usually much slower. Multi-pose\r\n * detection should only be used when needed.\r\n *\r\n * `flipHorizontal`: Optional. Default to false. In some cases, the image is\r\n * mirrored, e.g. video stream from camera, flipHorizontal will flip the\r\n * keypoints horizontally.\r\n */\r\nexport interface EstimationConfig {\r\n  maxPoses?: number;\r\n  flipHorizontal?: boolean;\r\n}\r\n\r\n/**\r\n * Allowed input format for the `estimatePoses` method.\r\n */\r\nexport type PoseDetectorInput = DetectorInput;\r\n\r\nexport interface InputResolution {\r\n  width: number;\r\n  height: number;\r\n}\r\n\r\nexport interface Pose {\r\n  keypoints: Keypoint[];\r\n  score?: number;            // The probability of an actual pose.\r\n  keypoints3D?: Keypoint[];  // Keypoints in meters in a 1m * 1m * 1m space.\r\n  box?: BoundingBox;         // A bounding box around the detected person.\r\n  id?: number;               // The unique identifier for this (tracked) pose.\r\n}\r\n"},"lineCount":null}},"error":null,"hash":"94134dd18dad4c71e30518658519a574","cacheData":{"env":{}}}