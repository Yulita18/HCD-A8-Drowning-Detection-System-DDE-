{"id":"node_modules/@tensorflow-models/pose-detection/shared/calculators/split_detection_result.ts","dependencies":[{"name":"C:\\xampp\\htdocs\\pose-detection\\demos\\live_video\\package.json","includedInParent":true,"mtime":1634830278911},{"name":"C:\\xampp\\htdocs\\pose-detection\\demos\\live_video\\.babelrc","includedInParent":true,"mtime":1634828519177},{"name":"@tensorflow/tfjs-core","loc":{"line":26,"column":30},"parent":"C:\\xampp\\htdocs\\pose-detection\\demos\\live_video\\node_modules\\@tensorflow-models\\pose-detection\\shared\\calculators\\split_detection_result.ts","resolved":"C:\\xampp\\htdocs\\pose-detection\\demos\\live_video\\node_modules\\@tensorflow\\tfjs-core\\dist\\index.js"}],"generated":{"js":"\"use strict\";\r\nvar __importStar = (this && this.__importStar) || function (mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result[\"default\"] = mod;\r\n    return result;\r\n};\r\nexports.__esModule = true;\r\n/**\r\n * @license\r\n * Copyright 2021 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * https://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\r\nvar tf = __importStar(require(\"@tensorflow/tfjs-core\"));\r\nfunction splitDetectionResult(detectionResult) {\r\n    return tf.tidy(function () {\r\n        // Score is stored in the first element in each anchor data.\r\n        var logits = tf.slice(detectionResult, [0, 0, 0], [1, -1, 1]);\r\n        var scores = tf.sigmoid(logits);\r\n        // Bounding box coords are stored in the next four elements for each anchor\r\n        // point.\r\n        var rawBoxes = tf.slice(detectionResult, [0, 0, 1], [1, -1, -1]);\r\n        return [scores, rawBoxes];\r\n    });\r\n}\r\nexports.splitDetectionResult = splitDetectionResult;\r\n"},"sourceMaps":{"js":{"version":3,"file":"split_detection_result.js","sourceRoot":"","sources":["node_modules/@tensorflow-models/pose-detection/shared/calculators/split_detection_result.ts"],"names":[],"mappings":";;;;;;;;;AAAA;;;;;;;;;;;;;;;GAeG;AACH,wDAA4C;AAE5C,SAAgB,oBAAoB,CAAC,eAA4B;IAE/D,OAAO,EAAE,CAAC,IAAI,CAAC;QACb,4DAA4D;QAC5D,IAAM,MAAM,GAAG,EAAE,CAAC,KAAK,CAAC,eAAe,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QAChE,IAAM,MAAM,GAAG,EAAE,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;QAClC,2EAA2E;QAC3E,SAAS;QACT,IAAM,QAAQ,GAAG,EAAE,CAAC,KAAK,CAAC,eAAe,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;QAEnE,OAAO,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC;IAC5B,CAAC,CAAC,CAAC;AACL,CAAC;AAZD,oDAYC","sourcesContent":["/**\r\n * @license\r\n * Copyright 2021 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * https://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\r\nimport * as tf from '@tensorflow/tfjs-core';\r\n\r\nexport function splitDetectionResult(detectionResult: tf.Tensor3D):\r\n    [tf.Tensor3D, tf.Tensor3D] {\r\n  return tf.tidy(() => {\r\n    // Score is stored in the first element in each anchor data.\r\n    const logits = tf.slice(detectionResult, [0, 0, 0], [1, -1, 1]);\r\n    const scores = tf.sigmoid(logits);\r\n    // Bounding box coords are stored in the next four elements for each anchor\r\n    // point.\r\n    const rawBoxes = tf.slice(detectionResult, [0, 0, 1], [1, -1, -1]);\r\n\r\n    return [scores, rawBoxes];\r\n  });\r\n}\r\n"]}},"error":null,"hash":"af2bf836deb69d0b0b0e6ed83add42cb","cacheData":{"env":{}}}