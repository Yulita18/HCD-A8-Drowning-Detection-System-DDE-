{"id":"node_modules/@tensorflow-models/pose-detection/shared/calculators/shift_image_value.ts","dependencies":[{"name":"C:\\xampp\\htdocs\\pose-detection\\demos\\live_video\\package.json","includedInParent":true,"mtime":1637425559411},{"name":"C:\\xampp\\htdocs\\pose-detection\\demos\\live_video\\.babelrc","includedInParent":true,"mtime":1634828519177},{"name":"@tensorflow/tfjs-core","loc":{"line":26,"column":30},"parent":"C:\\xampp\\htdocs\\pose-detection\\demos\\live_video\\node_modules\\@tensorflow-models\\pose-detection\\shared\\calculators\\shift_image_value.ts","resolved":"C:\\xampp\\htdocs\\pose-detection\\demos\\live_video\\node_modules\\@tensorflow\\tfjs-core\\dist\\index.js"},{"name":"./image_utils","loc":{"line":27,"column":28},"parent":"C:\\xampp\\htdocs\\pose-detection\\demos\\live_video\\node_modules\\@tensorflow-models\\pose-detection\\shared\\calculators\\shift_image_value.ts","resolved":"C:\\xampp\\htdocs\\pose-detection\\demos\\live_video\\node_modules\\@tensorflow-models\\pose-detection\\shared\\calculators\\image_utils.ts"}],"generated":{"js":"\"use strict\";\r\nvar __importStar = (this && this.__importStar) || function (mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result[\"default\"] = mod;\r\n    return result;\r\n};\r\nexports.__esModule = true;\r\n/**\r\n * @license\r\n * Copyright 2021 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * https://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\r\nvar tf = __importStar(require(\"@tensorflow/tfjs-core\"));\r\nvar image_utils_1 = require(\"./image_utils\");\r\nfunction shiftImageValue(image, outputFloatRange) {\r\n    // Calculate the scale and offset to shift from [0, 255] to [-1, 1].\r\n    var valueRange = image_utils_1.transformValueRange(0, 255, outputFloatRange[0] /* min */, outputFloatRange[1] /* max */);\r\n    // Shift value range.\r\n    return tf.tidy(function () { return tf.add(tf.mul(image, valueRange.scale), valueRange.offset); });\r\n}\r\nexports.shiftImageValue = shiftImageValue;\r\n"},"sourceMaps":{"js":{"version":3,"file":"shift_image_value.js","sourceRoot":"","sources":["node_modules/@tensorflow-models/pose-detection/shared/calculators/shift_image_value.ts"],"names":[],"mappings":";;;;;;;;;AAAA;;;;;;;;;;;;;;;GAeG;AACH,wDAA4C;AAC5C,6CAAkD;AAElD,SAAgB,eAAe,CAC3B,KAAkB,EAAE,gBAAkC;IACxD,oEAAoE;IACpE,IAAM,UAAU,GAAG,iCAAmB,CAClC,CAAC,EAAE,GAAG,EAAE,gBAAgB,CAAC,CAAC,CAAC,CAAC,SAAS,EAAE,gBAAgB,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC;IAE1E,qBAAqB;IACrB,OAAO,EAAE,CAAC,IAAI,CACV,cAAM,OAAA,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,KAAK,EAAE,UAAU,CAAC,KAAK,CAAC,EAAE,UAAU,CAAC,MAAM,CAAC,EAA1D,CAA0D,CAAC,CAAC;AACxE,CAAC;AATD,0CASC","sourcesContent":["/**\r\n * @license\r\n * Copyright 2021 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * https://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\r\nimport * as tf from '@tensorflow/tfjs-core';\r\nimport {transformValueRange} from './image_utils';\r\n\r\nexport function shiftImageValue(\r\n    image: tf.Tensor4D, outputFloatRange: [number, number]): tf.Tensor4D {\r\n  // Calculate the scale and offset to shift from [0, 255] to [-1, 1].\r\n  const valueRange = transformValueRange(\r\n      0, 255, outputFloatRange[0] /* min */, outputFloatRange[1] /* max */);\r\n\r\n  // Shift value range.\r\n  return tf.tidy(\r\n      () => tf.add(tf.mul(image, valueRange.scale), valueRange.offset));\r\n}\r\n"]}},"error":null,"hash":"f1a8ebb38bd161eb470813bd39ed866a","cacheData":{"env":{}}}