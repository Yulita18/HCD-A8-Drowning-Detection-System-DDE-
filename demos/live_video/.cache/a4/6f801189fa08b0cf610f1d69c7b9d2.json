{"id":"node_modules/@tensorflow-models/pose-detection/shared/filters/visibility_smoothing.ts","dependencies":[{"name":"C:\\xampp\\htdocs\\tfjs-models\\pose-detection\\demos\\live_video\\package.json","includedInParent":true,"mtime":1634211906094},{"name":"C:\\xampp\\htdocs\\tfjs-models\\pose-detection\\demos\\live_video\\.babelrc","includedInParent":true,"mtime":1634209725400},{"name":"./low_pass_filter","loc":{"line":30,"column":32},"parent":"C:\\xampp\\htdocs\\tfjs-models\\pose-detection\\demos\\live_video\\node_modules\\@tensorflow-models\\pose-detection\\shared\\filters\\visibility_smoothing.ts","resolved":"C:\\xampp\\htdocs\\tfjs-models\\pose-detection\\demos\\live_video\\node_modules\\@tensorflow-models\\pose-detection\\shared\\filters\\low_pass_filter.ts"}],"generated":{"js":"\"use strict\";\r\n/**\r\n * @license\r\n * Copyright 2021 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * https://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\r\nvar __assign = (this && this.__assign) || function () {\r\n    __assign = Object.assign || function(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\r\n                t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\nexports.__esModule = true;\r\nvar low_pass_filter_1 = require(\"./low_pass_filter\");\r\n/**\r\n * Smoothing visibility using a `LowPassFilter` for each landmark.\r\n */\r\nvar LowPassVisibilityFilter = /** @class */ (function () {\r\n    function LowPassVisibilityFilter(config) {\r\n        this.alpha = config.alpha;\r\n    }\r\n    LowPassVisibilityFilter.prototype.apply = function (landmarks) {\r\n        var _this = this;\r\n        if (landmarks == null) {\r\n            // Reset filters.\r\n            this.visibilityFilters = null;\r\n            return null;\r\n        }\r\n        if (this.visibilityFilters == null ||\r\n            (this.visibilityFilters.length !== landmarks.length)) {\r\n            // Initialize new filters.\r\n            this.visibilityFilters =\r\n                landmarks.map(function (_) { return new low_pass_filter_1.LowPassFilter(_this.alpha); });\r\n        }\r\n        var outLandmarks = [];\r\n        // Filter visibilities.\r\n        for (var i = 0; i < landmarks.length; ++i) {\r\n            var landmark = landmarks[i];\r\n            var outLandmark = __assign({}, landmark);\r\n            outLandmark.score = this.visibilityFilters[i].apply(landmark.score);\r\n            outLandmarks.push(outLandmark);\r\n        }\r\n        return outLandmarks;\r\n    };\r\n    return LowPassVisibilityFilter;\r\n}());\r\nexports.LowPassVisibilityFilter = LowPassVisibilityFilter;\r\n"},"sourceMaps":{"js":{"version":3,"file":"visibility_smoothing.js","sourceRoot":"","sources":["node_modules/@tensorflow-models/pose-detection/shared/filters/visibility_smoothing.ts"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;;GAeG;;;;;;;;;;;;;AAKH,qDAAgD;AAEhD;;GAEG;AACH;IAIE,iCAAY,MAAiC;QAC3C,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC;IAC5B,CAAC;IAED,uCAAK,GAAL,UAAM,SAAsB;QAA5B,iBA0BC;QAzBC,IAAI,SAAS,IAAI,IAAI,EAAE;YACrB,iBAAiB;YACjB,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;YAC9B,OAAO,IAAI,CAAC;SACb;QACD,IAAI,IAAI,CAAC,iBAAiB,IAAI,IAAI;YAC9B,CAAC,IAAI,CAAC,iBAAiB,CAAC,MAAM,KAAK,SAAS,CAAC,MAAM,CAAC,EAAE;YACxD,0BAA0B;YAC1B,IAAI,CAAC,iBAAiB;gBAClB,SAAS,CAAC,GAAG,CAAC,UAAA,CAAC,IAAI,OAAA,IAAI,+BAAa,CAAC,KAAI,CAAC,KAAK,CAAC,EAA7B,CAA6B,CAAC,CAAC;SACvD;QAED,IAAM,YAAY,GAAG,EAAE,CAAC;QAExB,uBAAuB;QACvB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE;YACzC,IAAM,QAAQ,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC;YAE9B,IAAM,WAAW,gBAAO,QAAQ,CAAC,CAAC;YAClC,WAAW,CAAC,KAAK,GAAG,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;YAEpE,YAAY,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;SAChC;QAED,OAAO,YAAY,CAAC;IACtB,CAAC;IACH,8BAAC;AAAD,CAAC,AAnCD,IAmCC;AAnCY,0DAAuB","sourcesContent":["/**\r\n * @license\r\n * Copyright 2021 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * https://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\r\n\r\nimport {Keypoint} from '../calculators/interfaces/common_interfaces';\r\n\r\nimport {VisibilitySmoothingConfig} from '../calculators/interfaces/config_interfaces';\r\nimport {LowPassFilter} from './low_pass_filter';\r\n\r\n/**\r\n * Smoothing visibility using a `LowPassFilter` for each landmark.\r\n */\r\nexport class LowPassVisibilityFilter {\r\n  private readonly alpha: number;\r\n  private visibilityFilters: LowPassFilter[];\r\n\r\n  constructor(config: VisibilitySmoothingConfig) {\r\n    this.alpha = config.alpha;\r\n  }\r\n\r\n  apply(landmarks?: Keypoint[]): Keypoint[] {\r\n    if (landmarks == null) {\r\n      // Reset filters.\r\n      this.visibilityFilters = null;\r\n      return null;\r\n    }\r\n    if (this.visibilityFilters == null ||\r\n        (this.visibilityFilters.length !== landmarks.length)) {\r\n      // Initialize new filters.\r\n      this.visibilityFilters =\r\n          landmarks.map(_ => new LowPassFilter(this.alpha));\r\n    }\r\n\r\n    const outLandmarks = [];\r\n\r\n    // Filter visibilities.\r\n    for (let i = 0; i < landmarks.length; ++i) {\r\n      const landmark = landmarks[i];\r\n\r\n      const outLandmark = {...landmark};\r\n      outLandmark.score = this.visibilityFilters[i].apply(landmark.score);\r\n\r\n      outLandmarks.push(outLandmark);\r\n    }\r\n\r\n    return outLandmarks;\r\n  }\r\n}\r\n"]}},"error":null,"hash":"103931b3cd6ac6b9caa18bc006cf0d12","cacheData":{"env":{}}}