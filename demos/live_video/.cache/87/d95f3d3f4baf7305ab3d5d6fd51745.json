{"id":"node_modules/@tensorflow-models/pose-detection/types.js","dependencies":[{"name":"C:\\xampp\\htdocs\\pose-detection\\demos\\live_video\\node_modules\\@tensorflow-models\\pose-detection\\types.js.map","includedInParent":true,"mtime":1636860388751},{"name":"C:\\xampp\\htdocs\\pose-detection\\src\\types.ts","includedInParent":true,"mtime":1636639142687},{"name":"C:\\xampp\\htdocs\\pose-detection\\demos\\live_video\\package.json","includedInParent":true,"mtime":1636883241532},{"name":"C:\\xampp\\htdocs\\pose-detection\\demos\\live_video\\.babelrc","includedInParent":true,"mtime":1634828519177},{"name":"./shared/calculators/interfaces/common_interfaces","loc":{"line":19,"column":34},"parent":"C:\\xampp\\htdocs\\pose-detection\\demos\\live_video\\node_modules\\@tensorflow-models\\pose-detection\\types.js","resolved":"C:\\xampp\\htdocs\\pose-detection\\demos\\live_video\\node_modules\\@tensorflow-models\\pose-detection\\shared\\calculators\\interfaces\\common_interfaces.ts"}],"generated":{"js":"\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/**\r\n * @license\r\n * Copyright 2021 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * https://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\r\nvar common_interfaces_1 = require(\"./shared/calculators/interfaces/common_interfaces\");\r\nexports.Keypoint = common_interfaces_1.Keypoint;\r\nvar SupportedModels;\r\n(function (SupportedModels) {\r\n    SupportedModels[\"MoveNet\"] = \"MoveNet\";\r\n    SupportedModels[\"BlazePose\"] = \"BlazePose\";\r\n    SupportedModels[\"PoseNet\"] = \"PoseNet\";\r\n})(SupportedModels = exports.SupportedModels || (exports.SupportedModels = {}));\r\n"},"sourceMaps":{"js":{"version":3,"file":"types.js","sourceRoot":"","sources":["../../../../../src/types.ts"],"names":[],"mappings":";;AAAA;;;;;;;;;;;;;;;GAeG;AACH,uFAA0F;AAGlF,mBAHe,4BAAQ,CAGf;AAEhB,IAAY,eAIX;AAJD,WAAY,eAAe;IACzB,sCAAmB,CAAA;IACnB,0CAAuB,CAAA;IACvB,sCAAmB,CAAA;AACrB,CAAC,EAJW,eAAe,GAAf,uBAAe,KAAf,uBAAe,QAI1B","sourcesContent":["/**\r\n * @license\r\n * Copyright 2021 Google LLC. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n * https://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n * =============================================================================\r\n */\r\nimport {DetectorInput, Keypoint} from '../src/shared/calculators/interfaces/common_interfaces';\r\nimport { BoundingBox } from '../src/shared/calculators/interfaces/shape_interfaces';\r\n\r\nexport {Keypoint};\r\n\r\nexport enum SupportedModels {\r\n  MoveNet = 'MoveNet',\r\n  BlazePose = 'BlazePose',\r\n  PoseNet = 'PoseNet'\r\n}\r\n\r\nexport type QuantBytes = 1|2|4;\r\n\r\n/**\r\n * Common config to create the pose detector.\r\n */\r\nexport interface ModelConfig {}\r\n\r\n/**\r\n * Common config for the `estimatePoses` method.\r\n *\r\n * `maxPoses`: Optional. Max number poses to detect. Default to 1, which means\r\n * single pose detection. Single pose detection runs more efficiently, while\r\n * multi-pose (maxPoses > 1) detection is usually much slower. Multi-pose\r\n * detection should only be used when needed.\r\n *\r\n * `flipHorizontal`: Optional. Default to false. In some cases, the image is\r\n * mirrored, e.g. video stream from camera, flipHorizontal will flip the\r\n * keypoints horizontally.\r\n */\r\nexport interface EstimationConfig {\r\n  maxPoses?: number;\r\n  flipHorizontal?: boolean;\r\n}\r\n\r\n/**\r\n * Allowed input format for the `estimatePoses` method.\r\n */\r\nexport type PoseDetectorInput = DetectorInput;\r\n\r\nexport interface InputResolution {\r\n  width: number;\r\n  height: number;\r\n}\r\n\r\nexport interface Pose {\r\n  keypoints: Keypoint[];\r\n  score?: number;            // The probability of an actual pose.\r\n  keypoints3D?: Keypoint[];  // Keypoints in meters in a 1m * 1m * 1m space.\r\n  box?: BoundingBox;         // A bounding box around the detected person.\r\n  id?: number;               // The unique identifier for this (tracked) pose.\r\n}\r\n"]}},"error":null,"hash":"1778708277fe02f25da47c2b64e1fbed","cacheData":{"env":{}}}